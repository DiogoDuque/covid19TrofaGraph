{"version":3,"sources":["config/demographicValues.js","utils/EntriesOps.tsx","model/EntriesAggregator.tsx","model/DateEntry.tsx","model/Entry.tsx","utils/fetchData.tsx","component/card/TextCard.js","model/DateRange.tsx","store/EntriesStore.tsx","store/GeneralStore.tsx","component/app/MyHeader.js","component/app/MyFooter.js","utils/chartUtils.tsx","component/card/InfoCard.js","component/app/SummaryCards.js","component/chart/DefaultLineChart.js","component/chart/MultiLineChart.js","config/themes.js","component/app/GeneralCharts.js","component/app/PortugalCharts.js","component/app/RegionCharts.js","component/app/TownCharts.js","component/app/AgeCharts.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["POPULATION_PT","POPULATION_0_9","POPULATION_10_19","POPULATION_20_29","POPULATION_30_39","POPULATION_40_49","POPULATION_50_59","POPULATION_60_69","POPULATION_70_PLUS","getEntriesSince","dateRange","entries","dateLimit","startDate","filter","e","date","derivateEntryValues","prevEntry","newCasesEntries","buildNewWith","x","i","length","currEntry","push","y","smoothEntryValues","strength","map","entry","index","startIndex","Math","max","finishIndex","min","relevantEntries","slice","sum","reduce","acc","round","convertDailyCountToDailyIncidency","populationSize","incidency","mergeEntryValuesBySum","entries1","entries2","mergeOp","console","error","mergeEntryValues","e1","e2","CONFIRMED_EXTRA_KEYS","CONFIRMED_0_9","CONFIRMED_10_19","CONFIRMED_20_29","CONFIRMED_30_39","CONFIRMED_40_49","CONFIRMED_50_59","CONFIRMED_60_69","CONFIRMED_70_79","CONFIRMED_80_PLUS","DEAD_EXTRA_KEYS","DEAD_0_9","DEAD_10_19","DEAD_20_29","DEAD_30_39","DEAD_40_49","DEAD_50_59","DEAD_60_69","DEAD_70_79","DEAD_80_PLUS","KEY","CONFIRMED_PT","CONFIRMED_NORTH","CONFIRMED_CENTER","CONFIRMED_LISBOA_TEJO","CONFIRMED_ALENTEJO","CONFIRMED_ALGARVE","NEWCASES_PT","ACTIVE_PT","HOSPITALIZED","HOSPITALIZED_NURSERY","HOSPITALIZED_ICU","DEAD_PT","CONFIRMED_0_9_F","CONFIRMED_0_9_M","CONFIRMED_10_19_F","CONFIRMED_10_19_M","CONFIRMED_20_29_F","CONFIRMED_20_29_M","CONFIRMED_30_39_F","CONFIRMED_30_39_M","CONFIRMED_40_49_F","CONFIRMED_40_49_M","CONFIRMED_50_59_F","CONFIRMED_50_59_M","CONFIRMED_60_69_F","CONFIRMED_60_69_M","CONFIRMED_70_79_F","CONFIRMED_70_79_M","CONFIRMED_80_PLUS_F","CONFIRMED_80_PLUS_M","DEAD_0_9_F","DEAD_0_9_M","DEAD_10_19_F","DEAD_10_19_M","DEAD_20_29_F","DEAD_20_29_M","DEAD_30_39_F","DEAD_30_39_M","DEAD_40_49_F","DEAD_40_49_M","DEAD_50_59_F","DEAD_50_59_M","DEAD_60_69_F","DEAD_60_69_M","DEAD_70_79_F","DEAD_70_79_M","DEAD_80_PLUS_F","DEAD_80_PLUS_M","INCIDENCE_PT","TOWN_INCIDENCE_14","TOWN_CONFIRMED_14","VACCINE_DOSE_1","VACCINE_DOSE_2","EntriesAggregator","name","_name","this","key","warn","EntriesAggregatorImpl","builder","_aggregationMap","_aggregator","EntriesAggregatorBuilder","current","PtDataEntriesAggregatorBuilder","extraKeys","Object","forEach","v","entriesM","entriesF","addEntries","addByAgeGroup","preProcess","DateEntry","count","parseInt","_date","isNaN","_y","dateStr","parts","split","Date","Number","strToDate","_x","Error","makeRequest","filename","url","headers","Headers","Accept","log","fetch","method","getDataFromSource","callback","filterFunc","then","response","status","text","responseData","stream","Readable","pipe","Csv","on","data","values","addEntry","build","catch","err","TextCard","children","Card","CardContent","Typography","variant","component","DateRange","endDate","_startDate","_endDate","getTime","range","setTime","EntriesStore","Store","portugalEntries","townEntries","vaccineEntries","fromRelativeRange","GeneralStore","styles","tab","currentTown","MyHeader","useState","isTimeDialogOpen","setTimeDialogOpen","customTimeValue","setCustomTimeValue","customTimeValueTmp","setCustomTimeValueTmp","s","validateTimeValue","n","parsedTimeValue","isInteger","closeTimeDialog","newValue","undefined","update","isTimeValueValid","AppBar","position","className","appBar","Toolbar","FormControl","formControl","InputLabel","id","Select","labelId","value","onChange","target","nativeEvent","innerText","MenuItem","Tabs","_e","indicatorColor","textColor","aria-label","scrollButtons","Tab","label","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","type","fullWidth","DialogActions","Button","onClick","color","disabled","MyFooter","href","getAdaptativePointRadius","width","window","screen","availWidth","densityValue","getChartData","chosenTheme","datasets","categoryPercentage","barPercentage","lineTension","borderWidth","pointBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointRadius","labels","getMultipleChartData","entriesArray","chosenThemes","Array","from","keys","getChartOptions","beginAtZero","suggestedMin","suggestedMax","maintainAspectRatio","scales","yAxes","ticks","cardWrapper","element","Grid","item","xs","md","chartWrapper","chartElement","chartContainer","chartGroupWrapper","title","components","style","textAlign","gutterBottom","container","spacing","InfoCard","elevation","fontSize","fontWeight","SummaryCards","ptEntries","currTown","town","toLowerCase","direction","alignItems","justify","cardGroupWrapper","getLast","DefaultLineChart","theme","zeroBased","lastNEntries","options","defaultProps","MultiLineChart","dataArray","themes","lastNEntriesArray","d","lastEntriesFlat","flatMap","eArr","offset","getThemeFromRGB","r","g","b","hasBackground","otherOptions","unified","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","themeCyanNoBG","themeMagenta","themeMagentaNoBG","themeMagentaLight","themeMagentaLightNoBG","themeMagentaDark","themeMagentaDarkNoBG","themeYellow","themeYellowNoBG","themeYellowDarkNoBG","themeBlue","themeBlueNoBG","themeBlueTransparent","pointHitRadius","borderDash","themeGreenNoBG","themeRed","themeRedNoBG","themeGreyTransparent","themeDark","severityTheme1","vaccineEntryToPercentage","parseFloat","toFixed","GeneralCharts","vaccine1Perc","getAll","vaccine2Perc","PortugalCharts","deathEntries","ptLineGenerator","RegionCharts","northEntries","centerEntries","lisbonEntries","alentejoEntries","algarveEntries","northDailyIncidencyEntries","centerDailyIncidencyEntries","lisbonDailyIncidencyEntries","alentejoDailyIncidencyEntries","algarveDailyIncidencyEntries","TownCharts","townEntriesIncidence14","ptEntriesIncidence14","xWhitelist","_entry","includes","convertDailyIncidencyToBiweeklyIncidency","AgeCharts","new0_9","new10_19","new20_29","new30_39","new40_49","new50_59","new60_69","new70_plus","newDailyIncidency0_9","newDailyIncidency10_19","newDailyIncidency20_29","newDailyIncidency30_39","newDailyIncidency40_49","newDailyIncidency50_59","newDailyIncidency60_69","newDailyIncidency70_plus","dead0_9","dead10_19","dead20_29","dead30_39","dead40_49","dead50_59","dead60_69","dead70_plus","deadDailyIncidency0_9","deadDailyIncidency10_19","deadDailyIncidency20_29","deadDailyIncidency30_39","deadDailyIncidency40_49","deadDailyIncidency50_59","deadDailyIncidency60_69","deadDailyIncidency70_plus","a","useStyles","makeStyles","root","flexGrow","padding","paddingRight","height","progress","float","marginBottom","minWidth","App","isFetching","setIsFetching","renderTime","setRenderTime","lastTownUpdate","lastPtUpdate","tabContent","getTabContent","isPtDataReady","isTownDataReady","useEffect","getVaccineData","concelho","getTownData","performance","now","CircularProgress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f9937b2.chunk.js","sourcesContent":["// Data retrieved from:\n// https://www.pordata.pt/Municipios/Popula%c3%a7%c3%a3o+residente+segundo+os+Censos+total+e+por+dimens%c3%a3o+dos+lugares-24\nexport const POPULATION_PT =       10562178;\nexport const POPULATION_NORTH =     3689682;\nexport const POPULATION_CENTER =    2327755;\nexport const POPULATION_LISBOA =    2821876;\nexport const POPULATION_ALENTEJO =   757302;\nexport const POPULATION_ALGARVE =    451006;\n// https://www.pordata.pt/Municipios/Popula%c3%a7%c3%a3o+residente+segundo+os+Censos+total+e+por+grupo+et%c3%a1rio-19\nexport const POPULATION_0_9 =       482647 + 525087;\nexport const POPULATION_10_19 =     564595 + 565250;\nexport const POPULATION_20_29 =     582065 + 656076;\nexport const POPULATION_30_39 =     773567 + 824683;\nexport const POPULATION_40_49 =     73098 + 770294;\nexport const POPULATION_50_59 =     722360 + 677651;\nexport const POPULATION_60_69 =     634741 + 551701;\nexport const POPULATION_70_PLUS =   496438 + 961925;\n","import Entry from \"../model/Entry\";\nimport DateEntry from \"../model/DateEntry\";\nimport DateRange from \"../model/DateRange\";\n\nexport function getEntriesLineGenerator<X>(entries: Entry<X>[]): (v: number) => Entry<X>[] {\n  return v => entries.map(e => e.buildNewWith(e.x, v));\n}\n\nexport function getEntriesSince(dateRange: DateRange, entries: DateEntry[]): DateEntry[] {\n  const dateLimit = dateRange.startDate;\n  return entries.filter(e => e.date >= dateLimit);\n}\n\nexport function derivateEntryValues<X>(entries: Entry<X>[]): Entry<X>[] {\n  let prevEntry = entries[0];\n  const newCasesEntries = [prevEntry.buildNewWith(prevEntry.x, 0)];\n\n  for(let i=1; i<entries.length; i++) {\n    const currEntry = entries[i];\n    newCasesEntries.push(prevEntry.buildNewWith(currEntry.x, currEntry.y - prevEntry.y));\n    prevEntry = currEntry;\n  }\n\n  return newCasesEntries;\n}\n\nexport function smoothEntryValues<X>(entries: Entry<X>[], strength: number = 7): Entry<X>[] {\n  return entries.map((entry, index) => {\n    const startIndex = Math.max(0, index-strength);\n    const finishIndex = Math.min(entries.length, index+strength);\n    const relevantEntries = entries.slice(startIndex, finishIndex);\n    const sum = relevantEntries.reduce((acc, e) => acc + e.y, 0);\n    return entry.buildNewWith(entry.x, Math.round(sum / relevantEntries.length));\n  });\n}\n\nexport function convertDailyCountToDailyIncidency<X>(entries: Entry<X>[], populationSize: number): Entry<X>[] {\n  return entries.map(entry => {\n    const incidency = Math.round(entry.y * 100000 / populationSize);\n    return entry.buildNewWith(entry.x, incidency);\n  });\n}\n\nexport function convertDailyIncidencyToBiweeklyIncidency<X>(entries: Entry<X>[], xWhitelist: X[] = []): Entry<X>[] {\n  return entries\n  .map((entry, index) => {\n    if(index < 13)\n      return entry; // value does not matter, as it will be filtered out after.\n    return entry.buildNewWith(\n      entry.x,\n      entries.slice(index-13, index+1).reduce((acc, e) => acc + e.y, 0)\n    );\n  })\n  .filter((_entry, index) => index >= 13)\n  .filter(e => xWhitelist.includes(e.x));\n}\n\nfunction mergeEntryValues<E extends Entry<string>>(entries1: E[], entries2: E[], mergeOp: (e1: E, e2: E) => E) {\n  if((entries1.length !== entries2.length) || (entries1[0].x !== entries2[0].x)) {\n    console.error(`The two Entry[] don't seem mergeable!\\n${entries1}\\n${entries2}`);\n    return [];\n  }\n\n  const entries: E[] = [];\n  for(let i=0; i<entries1.length; i++) {\n    entries.push(mergeOp(entries1[i], entries2[i]));\n  }\n  return entries;\n}\n\nexport function mergeEntryValuesBySum(entries1: Entry<string>[], entries2: Entry<string>[]): Entry<string>[] {\n  return mergeEntryValues(entries1, entries2, (e1, e2) => e1.buildNewWith(e1.x, e1.y + e2.y));\n}\n","import { POPULATION_PT } from '../config/demographicValues';\nimport { convertDailyCountToDailyIncidency, mergeEntryValuesBySum } from '../utils/EntriesOps';\nimport DateEntry from './DateEntry';\nimport Entry from './Entry';\n\nconst CONFIRMED_KEYS = {\n  CONFIRMED_0_9_F: 'confirmados_0_9_f',\n  CONFIRMED_0_9_M: 'confirmados_0_9_m',\n  CONFIRMED_10_19_F: 'confirmados_10_19_f',\n  CONFIRMED_10_19_M: 'confirmados_10_19_m',\n  CONFIRMED_20_29_F: 'confirmados_20_29_f',\n  CONFIRMED_20_29_M: 'confirmados_20_29_m',\n  CONFIRMED_30_39_F: 'confirmados_30_39_f',\n  CONFIRMED_30_39_M: 'confirmados_30_39_m',\n  CONFIRMED_40_49_F: 'confirmados_40_49_f',\n  CONFIRMED_40_49_M: 'confirmados_40_49_m',\n  CONFIRMED_50_59_F: 'confirmados_50_59_f',\n  CONFIRMED_50_59_M: 'confirmados_50_59_m',\n  CONFIRMED_60_69_F: 'confirmados_60_69_f',\n  CONFIRMED_60_69_M: 'confirmados_60_69_m',\n  CONFIRMED_70_79_F: 'confirmados_70_79_f',\n  CONFIRMED_70_79_M: 'confirmados_70_79_m',\n  CONFIRMED_80_PLUS_F: 'confirmados_80_plus_f',\n  CONFIRMED_80_PLUS_M: 'confirmados_80_plus_m',\n};\n\nconst CONFIRMED_EXTRA_KEYS = {\n  CONFIRMED_0_9: 'confirmados_0_9',\n  CONFIRMED_10_19: 'confirmados_10_19',\n  CONFIRMED_20_29: 'confirmados_20_29',\n  CONFIRMED_30_39: 'confirmados_30_39',\n  CONFIRMED_40_49: 'confirmados_40_49',\n  CONFIRMED_50_59: 'confirmados_50_59',\n  CONFIRMED_60_69: 'confirmados_60_69',\n  CONFIRMED_70_79: 'confirmados_70_79',\n  CONFIRMED_80_PLUS: 'confirmados_80_plus',\n};\n\nconst DEAD_KEYS = {\n  DEAD_0_9_F: 'obitos_0_9_f',\n  DEAD_0_9_M: 'obitos_0_9_m',\n  DEAD_10_19_F: 'obitos_10_19_f',\n  DEAD_10_19_M: 'obitos_10_19_m',\n  DEAD_20_29_F: 'obitos_20_29_f',\n  DEAD_20_29_M: 'obitos_20_29_m',\n  DEAD_30_39_F: 'obitos_30_39_f',\n  DEAD_30_39_M: 'obitos_30_39_m',\n  DEAD_40_49_F: 'obitos_40_49_f',\n  DEAD_40_49_M: 'obitos_40_49_m',\n  DEAD_50_59_F: 'obitos_50_59_f',\n  DEAD_50_59_M: 'obitos_50_59_m',\n  DEAD_60_69_F: 'obitos_60_69_f',\n  DEAD_60_69_M: 'obitos_60_69_m',\n  DEAD_70_79_F: 'obitos_70_79_f',\n  DEAD_70_79_M: 'obitos_70_79_m',\n  DEAD_80_PLUS_F: 'obitos_80_plus_f',\n  DEAD_80_PLUS_M: 'obitos_80_plus_m',\n};\n\nconst DEAD_EXTRA_KEYS = {\n  DEAD_0_9: 'obitos_0_9',\n  DEAD_10_19: 'obitos_10_19',\n  DEAD_20_29: 'obitos_20_29',\n  DEAD_30_39: 'obitos_30_39',\n  DEAD_40_49: 'obitos_40_49',\n  DEAD_50_59: 'obitos_50_59',\n  DEAD_60_69: 'obitos_60_69',\n  DEAD_70_79: 'obitos_70_79',\n  DEAD_80_PLUS: 'obitos_80_plus',\n};\n\nexport const KEY = {\n  // data.csv\n  CONFIRMED_PT: 'confirmados',\n  CONFIRMED_NORTH: 'confirmados_arsnorte',\n  CONFIRMED_CENTER: 'confirmados_arscentro',\n  CONFIRMED_LISBOA_TEJO: 'confirmados_arslvt',\n  CONFIRMED_ALENTEJO: 'confirmados_arsalentejo',\n  CONFIRMED_ALGARVE: 'confirmados_arsalgarve',\n  NEWCASES_PT: 'confirmados_novos',\n  ACTIVE_PT: 'ativos',\n  HOSPITALIZED: 'internados',\n  HOSPITALIZED_NURSERY: 'internados_enfermaria',\n  HOSPITALIZED_ICU: 'internados_uci',\n  DEAD_PT: 'obitos',\n  ...CONFIRMED_KEYS,\n  ...DEAD_KEYS,\n\n  // data.csv extra\n  ...CONFIRMED_EXTRA_KEYS,\n  ...DEAD_EXTRA_KEYS,\n  INCIDENCE_PT: 'incidencia_pt',\n\n  // data_concelhos_new.csv\n  TOWN_INCIDENCE_14: 'incidencia',\n  TOWN_CONFIRMED_14: 'confirmados_14',\n\n  //vacinas.csv\n  VACCINE_DOSE_1: 'doses1',\n  VACCINE_DOSE_2: 'doses2',\n}\n\nexport default class EntriesAggregator<X, E extends Entry<X>> {\n  _name: string;\n  constructor(name: string) {\n    this._name = name;\n  }\n  getAll(key: string): E[] {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getAll!`);\n    return [];\n  }\n  getLast(key: string): any {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getLastEntry!`);\n    return null;\n  }\n}\n\nclass EntriesAggregatorImpl<X, E extends Entry<X>> extends EntriesAggregator<X, E> {\n  _aggregationMap: {[key: string]: E[]};\n\n  constructor(builder: EntriesAggregatorBuilder<X, E>) {\n    super(builder.name);\n    this._aggregationMap = builder._aggregator;\n  }\n\n  getAll(key: string): E[] {\n    return this._aggregationMap[key] || [];\n  }\n\n  getLast(key: string): E {\n    const entries = this._aggregationMap[key];\n    return entries[entries.length - 1];\n  }\n}\n\nexport class EntriesAggregatorBuilder<X, E extends Entry<X>> {\n  _name: string;\n  _aggregator: {[key: string]: E[]};\n\n  constructor(name: string) {\n    this._name = name;\n    this._aggregator = {};\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  addEntry(key: string, entry: E) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, entry];\n    return this;\n  }\n\n  addEntries(key: string, entries: E[]) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, ...entries];\n    return this;\n  }\n\n  build(): EntriesAggregatorImpl<X, E> {\n    return new EntriesAggregatorImpl(this);\n  }\n}\n\nexport class PtDataEntriesAggregatorBuilder extends EntriesAggregatorBuilder<string, DateEntry> {\n  addByAgeGroup(extraKeys: Object) {\n    Object.entries(extraKeys).forEach(([, v]) => {\n      const entriesM: DateEntry[] = this._aggregator[`${v}_m`];\n      const entriesF: DateEntry[] = this._aggregator[`${v}_f`];\n      this.addEntries(v, mergeEntryValuesBySum(entriesM, entriesF) as DateEntry[]);\n    });\n  }\n\n  preProcess() {\n    this.addByAgeGroup(DEAD_EXTRA_KEYS);\n    this.addByAgeGroup(CONFIRMED_EXTRA_KEYS);\n    \n    this.addEntries(\n      KEY.INCIDENCE_PT,\n      convertDailyCountToDailyIncidency(this._aggregator[KEY.NEWCASES_PT], POPULATION_PT) as DateEntry[]\n    );\n  }\n\n  build(): EntriesAggregatorImpl<string, DateEntry> {\n    this.preProcess();\n    return new EntriesAggregatorImpl(this);\n  }\n}","import Entry from \"./Entry\";\n\nfunction strToDate(dateStr: string): Date {\n  const parts = dateStr.split('-');\n  return new Date(Number(parts[2]), Number(parts[1])-1, Number(parts[0]));\n}\n\nexport function dateToStr(date: Date): string {\n  return `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}`;\n}\n\nexport default class DateEntry extends Entry<string> {\n  _date: Date;\n\n  constructor(date: string, count: string|number) {\n    super(date, typeof count === 'number' ? count : parseInt(count));\n    if(isNaN(this._y))\n      this._y = 0;\n\n    this._date = strToDate(date);\n  }\n\n  get dateStr(): string {\n    return this._x;\n  }\n\n  get date(): Date {\n    return this._date;\n  }\n\n  get count(): number {\n    return this._y;\n  }\n\n  buildNewWith(x: string, y: number): DateEntry {\n    return new DateEntry(x, y);\n  }\n}","\nexport default class Entry<X> {\n  protected _x: X;\n  protected _y: number;\n\n  constructor(x: X, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  \n  public get x() : X {\n    return this._x;\n  }\n  \n  public get y() : number {\n    return this._y;\n  }\n\n  buildNewWith(x: X, y: number): Entry<X> {\n    throw new Error('Method buildNewWith() is not implemented!');\n  }\n}","import { Readable } from 'stream';\nimport Csv from 'csv-parser';\nimport DateEntry from '../model/DateEntry';\nimport { EntriesAggregatorBuilder, PtDataEntriesAggregatorBuilder, KEY } from '../model/EntriesAggregator';\n\nfunction makeRequest(filename: string): Promise<Response> {\n  const url = 'https://raw.githubusercontent.com/dssg-pt/covid19pt-data/master/' + filename;\n    const headers: Headers = new Headers({\n      Accept: 'application/vnd.github.v3+json',\n    });\n    console.log('[getDataFromSource] Fetching ' + filename);\n    return fetch(url, { method: 'GET', headers })\n}\n\nfunction getDataFromSource(builder: EntriesAggregatorBuilder<string, DateEntry>,\n    callback: Function, filterFunc: Function = ()=>true) {\n  makeRequest(builder.name)\n  .then((response: Response) => {\n    if (response && response.status === 200)\n      return response.text();\n  })\n  .then(responseData => {\n    const stream = new Readable();\n    stream.push(responseData);\n    stream.push(null);\n    stream\n      .pipe(Csv())\n      .on('data', data =>\n        filterFunc(data)\n        && Object.values(KEY)\n        .forEach(key => data[key] && builder.addEntry(key, new DateEntry(data.data, data[key])))\n      )\n      .on('end', () => callback(builder.build()));\n  })\n  .catch(err => console.error(err));;\n}\n\nexport function getTownData(town: string, callback: Function) {\n  const filename = 'data_concelhos_new.csv';\n  getDataFromSource(\n    new EntriesAggregatorBuilder(filename),\n    callback,\n    (data: any) => data.concelho === town\n  );\n}\n\nexport function getPortugalData(callback: Function) {\n  const filename = 'data.csv';\n  getDataFromSource(\n    new PtDataEntriesAggregatorBuilder(filename),\n    callback\n  );\n}\n\nexport function getVaccineData(callback: Function) {\n  const filename = 'vacinas.csv';\n  getDataFromSource(\n    new EntriesAggregatorBuilder(filename),\n    callback\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst TextCard = ({ children }) => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        { children }\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default TextCard;\n","\nexport default class DateRange {\n  private _startDate: Date;\n  private _endDate: Date;\n\n  constructor(startDate: Date, endDate: Date = new Date()) {\n    this._startDate = startDate;\n    this._endDate = endDate;\n  }\n\n  get startDate() {\n    return this._startDate;\n  }\n\n  get endDate() {\n    return this._endDate;\n  }\n\n  get range() {\n    return (this.endDate.getTime() - this.startDate.getTime())/(24*60*60*1000)\n  }\n\n  static fromRelativeRange(range: number) {\n    const endDate: Date = new Date();\n    const startDate: Date = new Date();\n    startDate.setTime(startDate.getTime() - range*24*60*60*1000);\n    return new this(startDate, endDate);\n  }\n}\n","import { Store } from \"pullstate\";\nimport DateRange from \"../model/DateRange\";\nimport EntriesAggregator from \"../model/EntriesAggregator\";\nimport Entry from \"../model/Entry\";\n\nconst EMPTY_TOWN_ENTRIES: {[key: string]: EntriesAggregator<unknown, Entry<unknown>>} = {};\n\nconst EntriesStore = new Store({\n  portugalEntries: new EntriesAggregator('DUMMY-PT'),\n  townEntries: EMPTY_TOWN_ENTRIES,\n  vaccineEntries: new EntriesAggregator('DUMMY-VAC'),\n  dateRange: DateRange.fromRelativeRange(60),\n});\n\nexport default EntriesStore;\n","import { Store } from \"pullstate\";\n\nconst GeneralStore = new Store({\n  styles: {},\n  tab: 0,\n  currentTown: 'TROFA',\n});\n\nexport default GeneralStore;\n","import React, { useState } from 'react';\nimport {\n  AppBar, FormControl, InputLabel, Select, MenuItem, Tab, Tabs, Toolbar, Button,\n  Dialog, DialogTitle, DialogActions, DialogContent, TextField,\n} from '@material-ui/core';\nimport EntriesStore from '../../store/EntriesStore';\nimport GeneralStore from '../../store/GeneralStore';\nimport DateRange from '../../model/DateRange';\n\nconst MyHeader = () => {\n  const [isTimeDialogOpen, setTimeDialogOpen] = useState(false);\n  const [customTimeValue, setCustomTimeValue] = useState(0);\n  const [customTimeValueTmp, setCustomTimeValueTmp] = useState(0);\n  const styles = GeneralStore.useState(s => s.styles);\n\n  const validateTimeValue = n => {\n    const parsedTimeValue = parseInt(n);\n    return !isNaN(n) && Number.isInteger(parsedTimeValue) & parsedTimeValue > 0;\n  };\n\n  const onTabChange = (_e, v) => GeneralStore.update(s => { s.tab = v });\n\n  const closeTimeDialog = (newValue = undefined) => {\n    if (validateTimeValue(newValue)) {\n      setCustomTimeValue(newValue);\n      EntriesStore.update(s => { s.dateRange = DateRange.fromRelativeRange(parseInt(newValue)) });\n    } else {\n      setCustomTimeValue();\n    }\n    setTimeDialogOpen(false);\n  };\n\n  const onTimeChange = e => {\n    const value = e.target.value;\n    const innerText = e.nativeEvent.target.innerText;\n    if (innerText === 'Outro')\n      setTimeDialogOpen(true);\n    else {\n      EntriesStore.update(s => { s.dateRange = DateRange.fromRelativeRange(value) });\n      setCustomTimeValue();\n    }\n\n  };\n\n  const isTimeValueValid = validateTimeValue(customTimeValueTmp);\n\n  return (\n    <AppBar position=\"sticky\" className={styles.appBar}>\n      <Toolbar>\n        <FormControl className={styles.formControl}>\n          <InputLabel id=\"time-selector\">Tempo</InputLabel>\n          <Select\n            labelId=\"time-selector\"\n            id=\"time-select\"\n            value={EntriesStore.useState(s => s.dateRange).range}\n            onChange={onTimeChange}\n          >\n            <MenuItem value={30}>30 dias</MenuItem>\n            <MenuItem value={60}>60 dias</MenuItem>\n            <MenuItem value={90}>90 dias</MenuItem>\n            <MenuItem value={999999}>Desde sempre</MenuItem>\n            <MenuItem value={customTimeValue}>Outro</MenuItem>\n          </Select>\n        </FormControl>\n        <Tabs\n          value={GeneralStore.useState(s => s.tab)}\n          onChange={onTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"my tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab label=\"Gráficos Gerais\" />\n          <Tab label=\"Gráficos Detalhados\" />\n          <Tab label=\"Infos\" />\n        </Tabs>\n      </Toolbar>\n      <Dialog open={isTimeDialogOpen} onClose={closeTimeDialog} aria-labelledby=\"time-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Define um valor de tempo</DialogTitle>\n        <DialogContent>\n          <TextField\n            error={!isTimeValueValid}\n            autoFocus\n            margin=\"dense\"\n            id=\"time-value\"\n            label=\"Tempo (número inteiro)\"\n            type=\"numeric\"\n            fullWidth\n            onChange={e => setCustomTimeValueTmp(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closeTimeDialog(customTimeValue)} color=\"primary\">\n            Cancelar\n              </Button>\n          <Button onClick={() => closeTimeDialog(customTimeValueTmp)} color=\"primary\" disabled={!isTimeValueValid}>\n            Definir\n              </Button>\n        </DialogActions>\n      </Dialog>\n    </AppBar>\n  );\n};\n\nexport default MyHeader;\n","import React from 'react';\nimport { Typography, Card, CardContent } from '@material-ui/core';\n\n\nconst MyFooter = () => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        Os dados aqui apresentados são extraídos do repositório <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a>.\n      <br />\n      O código para este dashboard pode ser consultado <a href=\"https://github.com/DiogoDuque/covid19TrofaGraph\">aqui</a>.\n      <br />\n        {/*The data hereby presented is extracted from the <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a> repository.*/}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default MyFooter;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Entry from \"../model/Entry\";\n\nfunction getAdaptativePointRadius<X>(entries: Entry<X>[]): number {\n  const width = window.screen.availWidth;\n  const count = entries.length;\n  const densityRatio = count/width;\n  const densityValue = densityRatio*12;\n  const retVal = Math.max(4-densityValue, 1);\n  return retVal;\n}\n\n/** CHART ARGUMENTS */\n\nexport const getChartData = <X extends unknown>(entries: Entry<X>[], label: string, chosenTheme: object) => ({\n  datasets: [{\n    label,\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entries),\n    data: entries.map(entry => entry.y),\n    ...chosenTheme,\n  }],\n  labels: entries.map(entry => entry.x),\n});\n\nexport const getMultipleChartData = <X extends unknown>(entriesArray: Entry<X>[][], labels: string[], chosenThemes: object[]) => ({\n  datasets: Array.from(Array(entriesArray.length).keys()).map(i => ({\n    label: labels[i],\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entriesArray[i]),\n    data: entriesArray[i].map(entry => entry.y),\n    ...chosenThemes[i],\n  })),\n  labels: entriesArray[0].map(entry => entry.x),\n});\n\nexport const getChartOptions = (beginAtZero=false, suggestedMin=null, suggestedMax=null) => ({\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero,\n        suggestedMin,\n        suggestedMax,\n      }\n    }]\n  },\n});\n\n/** HOF WRAPPERS */\nlet key=0;\nconst cardWrapper = (element: JSX.Element): JSX.Element => (\n  <Grid key={key++} item xs={6} md={3}>\n    { element }\n  </Grid>\n);\n\nexport const cardGroupWrapper = (...components: JSX.Element[]): JSX.Element => (\n  <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\n    { components.map(component => cardWrapper(component)) }\n  </Grid>\n);\n\nconst chartWrapper = (chartElement: JSX.Element, styles: any): JSX.Element => (\n  <Grid item xs={12} key={key++}>\n    <div className={styles.chartContainer}>\n      {chartElement}\n    </div>\n  </Grid>\n);\n\nexport const chartGroupWrapper = (title: String, styles: any, ...components: JSX.Element[]) => (\n  <div>\n    <Typography variant=\"h3\" style={{ textAlign: 'center' }} gutterBottom>\n      {title}\n    </Typography>\n    <Grid container spacing={3}>\n      {components.map(component => chartWrapper(component, styles))}\n    </Grid>\n  </div>\n);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Typography, Card, CardContent } from '@material-ui/core';\nimport DateEntry from \"../../model/DateEntry\";\n\nconst InfoCard = ({title, entry}) => {\n\n  return (\n    <Card elevation={4}>\n      <CardContent>\n        <Typography style={{ fontSize: 15, fontWeight: 'bold' }} color=\"textSecondary\" gutterBottom>\n            {title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {entry.count}\n        </Typography>\n        <Typography style={{ fontSize: 11 }} color=\"textSecondary\">\n          {`Última atualização: ${entry.dateStr}`}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  entry: PropTypes.instanceOf(DateEntry).isRequired,\n};\n\nexport default InfoCard;","import React from 'react';\nimport { cardGroupWrapper } from '../../utils/chartUtils';\nimport { KEY } from '../../model/EntriesAggregator';\nimport InfoCard from '../card/InfoCard';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst SummaryCards = () => {\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  let currTown = GeneralStore.useState(s => s.currentTown);\n  const townEntries = EntriesStore.useState(s => s.townEntries[currTown]);\n  const town = currTown[0] + currTown.slice(1).toLowerCase();\n\n  return cardGroupWrapper(\n    <InfoCard title=\"Casos ativos em Portugal\" entry={ptEntries.getLast(KEY.ACTIVE_PT)} />,\n    <InfoCard title=\"Casos novos em Portugal\" entry={ptEntries.getLast(KEY.NEWCASES_PT)} />,\n    <InfoCard title={`Incidência na ${town}`} entry={townEntries.getLast(KEY.TOWN_INCIDENCE_14)} />,\n    <InfoCard title={`Casos novos (14d) na ${town}`} entry={townEntries.getLast(KEY.TOWN_CONFIRMED_14)} />,\n  );\n}\n\nexport default SummaryCards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport DateRange from '../../model/DateRange';\nimport DateEntry from '../../model/DateEntry';\nimport { getChartOptions, getChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst DefaultLineChart = ({ data, dateRange, label, theme, zeroBased }) => {\n  const lastNEntries = getEntriesSince(dateRange, data);\n  const min = Math.min(...lastNEntries.map(e=>e.count));\n  const max = Math.max(...lastNEntries.map(e=>e.count));\n  const margin = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + margin);\n\n  let suggestedMin = Math.round(min - margin);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  \n  return (\n    <Line\n      data={getChartData(lastNEntries, label, theme)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nDefaultLineChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.instanceOf(DateEntry)).isRequired,\n  dateRange: PropTypes.instanceOf(DateRange).isRequired,\n  label: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  zeroBased: PropTypes.bool,\n};\n\nDefaultLineChart.defaultProps = {\n  zeroBased: true,\n};\n\nexport default DefaultLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport DateRange from '../../model/DateRange';\nimport DateEntry from '../../model/DateEntry';\nimport { getChartOptions, getMultipleChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst MultiLineChart = ({ dataArray, dateRange, labels, themes, zeroBased }) => {\n  const lastNEntriesArray = dataArray.map(d=>getEntriesSince(dateRange, d));\n  const lastEntriesFlat = lastNEntriesArray.flatMap(eArr=>eArr.map(e=>e.count));\n  const min = Math.min(...lastEntriesFlat);\n  const max = Math.max(...lastEntriesFlat);\n  const offset = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + offset);\n\n  let suggestedMin = Math.round(min - offset);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  if(dataArray.length !== labels.length || labels.length !== themes.length) {\n    console.error('Chart arguments cardinality did not match!');\n    return <Line options={getChartOptions(false, suggestedMin, suggestedMax)}/>\n  }\n  return (\n    <Line\n      data={getMultipleChartData(lastNEntriesArray, labels, themes)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nMultiLineChart.propTypes = {\n  dataArray: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.instanceOf(DateEntry))).isRequired,\n  dateRange: PropTypes.instanceOf(DateRange).isRequired,\n  labels: PropTypes.arrayOf(PropTypes.string.isRequired),\n  themes: PropTypes.arrayOf(PropTypes.object.isRequired),\n  zeroBased: PropTypes.bool,\n};\n\nMultiLineChart.defaultProps = {\n  zeroBased: true,\n  dateRange: 0,\n};\n\nexport default MultiLineChart;\n","function getThemeFromRGB(r,g,b, hasBackground=true, otherOptions={}) {\n  const unified = `${r},${g},${b}`;\n  return {\n    backgroundColor: hasBackground ? `rgba(${unified},0.4)` : 'rgba(0,0,0,0)',\n    borderColor: `rgba(${unified},1)`,\n    pointBorderColor: `rgba(${unified},1)`,\n    pointHoverBackgroundColor: `rgba(${unified},1)`,\n    ...otherOptions,\n  }\n}\n\n// CYAN\nexport const themeCyan = getThemeFromRGB(75, 192, 192);\nexport const themeCyanNoBG = getThemeFromRGB(75, 192, 192, false);\n\n\n// MAGENTA\nexport const themeMagenta = getThemeFromRGB(192, 75, 192);\nexport const themeMagentaNoBG = getThemeFromRGB(192, 75, 192, false);\nexport const themeMagentaLight = getThemeFromRGB(217, 128, 217);\nexport const themeMagentaLightNoBG = getThemeFromRGB(217, 128, 217, false);\nexport const themeMagentaDark = getThemeFromRGB(140, 83, 140);\nexport const themeMagentaDarkNoBG = getThemeFromRGB(140, 83, 140, false);\n\n\n// YELLOW\nexport const themeYellow = getThemeFromRGB(192, 192, 75);\nexport const themeYellowNoBG = getThemeFromRGB(192, 192, 75, false);\nexport const themeYellowLight = getThemeFromRGB(217, 217, 128);\nexport const themeYellowLightNoBG = getThemeFromRGB(217, 217, 128, false);\nexport const themeYellowDark = getThemeFromRGB(140, 140, 83);\nexport const themeYellowDarkNoBG = getThemeFromRGB(140, 140, 83, false);\n\n\n// BLUE\nexport const themeBlue = getThemeFromRGB(0, 80, 255);\nexport const themeBlueNoBG = getThemeFromRGB(0, 80, 255, false);\nexport const themeBlueTransparent = getThemeFromRGB(0, 80, 255, false, {pointRadius:0, pointHitRadius:0, borderDash:[8]});\n\n\n// GREEN\nexport const themeGreen = getThemeFromRGB(0, 255, 80);\nexport const themeGreenNoBG = getThemeFromRGB(0, 255, 80, false);\n\n\n// RED\nexport const themeRed = getThemeFromRGB(255, 80, 30);\nexport const themeRedNoBG = getThemeFromRGB(255, 80, 30, false);\n\n// OTHERS\nexport const themeGreyTransparent = getThemeFromRGB(200, 200, 200, false, {pointRadius:0, pointHitRadius:0, borderDash:[8]});\nexport const themeDark = getThemeFromRGB(20, 20, 20);\n\nexport const severityTheme1 = getThemeFromRGB(255, 189, 0, false);\nexport const severityTheme2 = getThemeFromRGB(255, 84, 0, false);\nexport const severityTheme3 = getThemeFromRGB(158, 0, 89, false);\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport DefaultLineChart from \"../chart/DefaultLineChart\";\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeMagenta, themeMagentaDark, themeMagentaLight } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\nimport { POPULATION_PT } from \"../../config/demographicValues\";\n\nconst vaccineEntryToPercentage = e => e.buildNewWith(e.x, parseFloat(Number(100 * e.y / POPULATION_PT).toFixed(2)));\n\nconst GeneralCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const vaccineEntries = EntriesStore.useState(s => s.vaccineEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n  const vaccine1Perc = vaccineEntries.getAll(KEY.VACCINE_DOSE_1).map(vaccineEntryToPercentage);\n  const vaccine2Perc = vaccineEntries.getAll(KEY.VACCINE_DOSE_2).map(vaccineEntryToPercentage);\n\n  return chartGroupWrapper('Casos ativos', styles,\n    <DefaultLineChart\n      data={ptEntries.getAll(KEY.ACTIVE_PT)}\n      dateRange={dateRange}\n      label=\"Casos ativos em Portugal\"\n      theme={themeMagenta}\n      zeroBased={true}\n    />,\n    <MultiLineChart\n      dataArray={[ptEntries.getAll(KEY.HOSPITALIZED_NURSERY), ptEntries.getAll(KEY.HOSPITALIZED_ICU)]}\n      dateRange={dateRange}\n      labels={[\"Internados em Enfermaria em Portugal\", \"Internados em UCI em Portugal\"]}\n      themes={[themeMagentaLight, themeMagentaDark]}\n      zeroBased={true}\n    />,\n    <MultiLineChart\n      dataArray={[vaccine1Perc, vaccine2Perc]}\n      dateRange={dateRange}\n      labels={[\"% de vacinados com 1 dose\", \"% de vacinados com 2 doses\"]}\n      themes={[themeMagentaLight, themeMagentaDark]}\n    />,\n  );\n}\n\nexport default GeneralCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { smoothEntryValues, derivateEntryValues, getEntriesLineGenerator } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeRed, themeBlue, themeDark, themeGreyTransparent, severityTheme1 } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst PortugalCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const deathEntries = derivateEntryValues(ptEntries.getAll(KEY.DEAD_PT));\n\n  const ptLineGenerator = getEntriesLineGenerator(ptEntries.getAll(KEY.INCIDENCE_PT));\n\n  return chartGroupWrapper('Evolução em Portugal', styles,\n\n    <MultiLineChart\n      dataArray={[\n        ptEntries.getAll(KEY.NEWCASES_PT), smoothEntryValues(ptEntries.getAll(KEY.NEWCASES_PT)),\n        \n      ]}\n      dateRange={dateRange}\n      labels={['Casos novos em Portugal', 'Tendência']}\n      themes={[themeRed, themeGreyTransparent]}\n    />,\n\n    <MultiLineChart\n      dataArray={[\n        ptEntries.getAll(KEY.INCIDENCE_PT), smoothEntryValues(ptEntries.getAll(KEY.INCIDENCE_PT)),\n        ptLineGenerator(120),\n        \n      ]}\n      dateRange={dateRange}\n      labels={['Incidência em Portugal (p/ 100k hab.)', 'Tendência', 'Risco elevado']}\n      themes={[themeBlue, themeGreyTransparent, severityTheme1]}\n    />,\n\n    <MultiLineChart\n    dataArray={[deathEntries, smoothEntryValues(deathEntries)]}\n    dateRange={dateRange}\n    labels={['Mortes em Portugal', 'Tendência']}\n    themes={[themeDark, themeGreyTransparent]}\n  />,\n  );\n}\n\nexport default PortugalCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { derivateEntryValues, convertDailyCountToDailyIncidency } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport {\n  themeYellowNoBG, themeCyanNoBG, themeMagentaNoBG, themeBlueNoBG, themeGreenNoBG\n} from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport {\n  POPULATION_NORTH, POPULATION_CENTER, POPULATION_LISBOA, POPULATION_ALENTEJO, POPULATION_ALGARVE\n} from '../../config/demographicValues';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst RegionCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const northEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_NORTH));\n  const centerEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_CENTER));\n  const lisbonEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_LISBOA_TEJO));\n  const alentejoEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALENTEJO));\n  const algarveEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALGARVE));\n  const northDailyIncidencyEntries = convertDailyCountToDailyIncidency(northEntries, POPULATION_NORTH);\n  const centerDailyIncidencyEntries = convertDailyCountToDailyIncidency(centerEntries, POPULATION_CENTER);\n  const lisbonDailyIncidencyEntries = convertDailyCountToDailyIncidency(lisbonEntries, POPULATION_LISBOA);\n  const alentejoDailyIncidencyEntries = convertDailyCountToDailyIncidency(alentejoEntries, POPULATION_ALENTEJO);\n  const algarveDailyIncidencyEntries = convertDailyCountToDailyIncidency(algarveEntries, POPULATION_ALGARVE);\n\n  return chartGroupWrapper('Evolução regional', styles,\n\n    // #### ZONAS DE PORTUGAL ####\n    <MultiLineChart\n    dataArray={[northEntries, centerEntries, lisbonEntries, alentejoEntries, algarveEntries]}\n      dateRange={dateRange}\n      labels={[\n        'Casos novos no Norte', 'Casos novos no Centro', 'Casos novos em Lisboa/V.Tejo',\n        'Casos novos no Alentejo', 'Casos novos no Algarve']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n\n    // #### INCIDENCIA NAS ZONAS DE PORTUGAL ####\n    <MultiLineChart\n      dataArray={[\n        northDailyIncidencyEntries, centerDailyIncidencyEntries, lisbonDailyIncidencyEntries,\n        alentejoDailyIncidencyEntries, algarveDailyIncidencyEntries\n      ]}\n      dateRange={dateRange}\n      labels={[\n        'Incidência no Norte (a 1 dia p/ 100k hab.)', 'Incidência no Centro (a 1 dia p/ 100k hab.)',\n        'Incidência em Lisboa/V.Tejo (a 1 dia p/ 100k hab.)', 'Incidência no Alentejo (a 1 dia p/ 100k hab.)',\n        'Incidência no Algarve (a 1 dia p/ 100k hab.)']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n  );\n}\n\nexport default RegionCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeYellow, themeBlueTransparent } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\nimport { convertDailyIncidencyToBiweeklyIncidency } from \"../../utils/EntriesOps\";\n\nconst TownCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const currTown = GeneralStore.useState(s => s.currentTown);\n  const townEntries = EntriesStore.useState(s => s.townEntries[currTown]);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const townEntriesIncidence14 = townEntries.getAll(KEY.TOWN_INCIDENCE_14);\n  const ptEntriesIncidence14 = convertDailyIncidencyToBiweeklyIncidency(\n    ptEntries.getAll(KEY.INCIDENCE_PT),\n    townEntriesIncidence14.map(e => e.x)\n  );\n  const town = currTown[0] + currTown.slice(1).toLowerCase();\n\n  return chartGroupWrapper(`Evolução - ${town}`, styles,\n  \n    <MultiLineChart\n      dataArray={[\n        townEntriesIncidence14,\n        ptEntriesIncidence14,\n      ]}\n      dateRange={dateRange}\n      labels={[\n        `Incidência - ${town} (a 14 dias p/ 100k hab.)`,\n        'Incidência em Portugal (a 14 dias p/ 100k hab.)',\n      ]}\n      themes={[themeYellow, themeBlueTransparent]}\n    />,\n  );\n}\n\nexport default TownCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { derivateEntryValues, convertDailyCountToDailyIncidency, mergeEntryValuesBySum } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport {\n  themeYellowNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG, themeRedNoBG,\n  themeYellowDarkNoBG, themeMagentaDarkNoBG, themeMagentaLightNoBG\n} from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport {\n  POPULATION_0_9, POPULATION_10_19, POPULATION_20_29, POPULATION_30_39, POPULATION_40_49,\n  POPULATION_50_59, POPULATION_60_69, POPULATION_70_PLUS,\n} from '../../config/demographicValues';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst AgeCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const new0_9 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_0_9));\n  const new10_19 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_10_19));\n  const new20_29 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_20_29));\n  const new30_39 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_30_39));\n  const new40_49 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_40_49));\n  const new50_59 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_50_59));\n  const new60_69 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_60_69));\n  const new70_plus = mergeEntryValuesBySum(\n    derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_70_79)),\n    derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_80_PLUS)));\n\n  const newDailyIncidency0_9 = convertDailyCountToDailyIncidency(new0_9, POPULATION_0_9);\n  const newDailyIncidency10_19 = convertDailyCountToDailyIncidency(new10_19, POPULATION_10_19);\n  const newDailyIncidency20_29 = convertDailyCountToDailyIncidency(new20_29, POPULATION_20_29);\n  const newDailyIncidency30_39 = convertDailyCountToDailyIncidency(new30_39, POPULATION_30_39);\n  const newDailyIncidency40_49 = convertDailyCountToDailyIncidency(new40_49, POPULATION_40_49);\n  const newDailyIncidency50_59 = convertDailyCountToDailyIncidency(new50_59, POPULATION_50_59);\n  const newDailyIncidency60_69 = convertDailyCountToDailyIncidency(new60_69, POPULATION_60_69);\n  const newDailyIncidency70_plus = convertDailyCountToDailyIncidency(new70_plus, POPULATION_70_PLUS);\n\n  const dead0_9 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_0_9));\n  const dead10_19 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_10_19));\n  const dead20_29 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_20_29));\n  const dead30_39 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_30_39));\n  const dead40_49 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_40_49));\n  const dead50_59 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_50_59));\n  const dead60_69 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_60_69));\n  const dead70_plus = mergeEntryValuesBySum(\n    derivateEntryValues(ptEntries.getAll(KEY.DEAD_70_79)),\n    derivateEntryValues(ptEntries.getAll(KEY.DEAD_80_PLUS)));\n  \n  const deadDailyIncidency0_9 = convertDailyCountToDailyIncidency(dead0_9, POPULATION_0_9);\n  const deadDailyIncidency10_19 = convertDailyCountToDailyIncidency(dead10_19, POPULATION_10_19);\n  const deadDailyIncidency20_29 = convertDailyCountToDailyIncidency(dead20_29, POPULATION_20_29);\n  const deadDailyIncidency30_39 = convertDailyCountToDailyIncidency(dead30_39, POPULATION_30_39);\n  const deadDailyIncidency40_49 = convertDailyCountToDailyIncidency(dead40_49, POPULATION_40_49);\n  const deadDailyIncidency50_59 = convertDailyCountToDailyIncidency(dead50_59, POPULATION_50_59);\n  const deadDailyIncidency60_69 = convertDailyCountToDailyIncidency(dead60_69, POPULATION_60_69);\n  const deadDailyIncidency70_plus = convertDailyCountToDailyIncidency(dead70_plus, POPULATION_70_PLUS);\n\n  const themes = [\n    themeMagentaLightNoBG, themeMagentaDarkNoBG, themeBlueNoBG, themeCyanNoBG,\n    themeGreenNoBG, themeYellowNoBG, themeYellowDarkNoBG, themeRedNoBG,\n  ];\n\n\n  return chartGroupWrapper('Evolução por idade', styles,\n\n  // #### CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n  dataArray={[new0_9, new10_19, new20_29, new30_39, new40_49, new50_59, new60_69, new70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Casos novos nos ${a} anos`)\n    }\n    themes={themes}\n  />,\n\n  // #### INCIDENCIA DE CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n    dataArray={[\n      newDailyIncidency0_9, newDailyIncidency10_19, newDailyIncidency20_29, newDailyIncidency30_39,\n      newDailyIncidency40_49, newDailyIncidency50_59, newDailyIncidency60_69, newDailyIncidency70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Incidência nos ${a} anos (p/ 100k pax na faixa)`)\n    }\n    themes={themes}\n  />,\n\n  // #### CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n  dataArray={[dead0_9, dead10_19, dead20_29, dead30_39, dead40_49, dead50_59, dead60_69, dead70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Mortes nos ${a} anos`)\n    }\n    themes={themes}\n  />,\n\n  // #### INCIDENCIA DE CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n    dataArray={[\n      deadDailyIncidency0_9, deadDailyIncidency10_19, deadDailyIncidency20_29, deadDailyIncidency30_39,\n      deadDailyIncidency40_49, deadDailyIncidency50_59, deadDailyIncidency60_69, deadDailyIncidency70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Incidência de mortes nos ${a} anos (p/ 100k pax na faixa)`)\n    }\n    themes={themes}\n  />,\n  );\n}\n\nexport default AgeCharts;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport EntriesAggregator, { KEY } from './model/EntriesAggregator';\nimport { getTownData, getPortugalData, getVaccineData } from './utils/fetchData';\nimport TextCard from './component/card/TextCard';\nimport MyHeader from './component/app/MyHeader';\nimport MyFooter from './component/app/MyFooter';\nimport SummaryCards from './component/app/SummaryCards';\nimport GeneralCharts from './component/app/GeneralCharts';\nimport NewCasesCharts from './component/app/PortugalCharts';\nimport RegionCharts from './component/app/RegionCharts';\nimport TownCharts from './component/app/TownCharts';\nimport EntriesStore from './store/EntriesStore';\nimport GeneralStore from './store/GeneralStore';\nimport DateEntry from './model/DateEntry';\nimport AgeCharts from './component/app/AgeCharts';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    'backgroundColor': '#f5f5f5',\n    flexGrow: 1,\n    'align-items': 'center',\n    'justify-content': 'center',\n    padding: 15,\n    paddingRight: 30,\n  },\n  chartContainer: {\n    position: 'relative',\n    margin: 'auto',\n    height: '50vh',\n    width: '90vw',\n  },\n  progress: {\n    float: 'none',\n    margin: '0 auto',\n  },\n  appBar: {\n    marginBottom: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  formControl: {\n    margin: 10,\n    minWidth: 80,\n  },\n}));\n\nfunction getTabContent(tab: number) {\n  switch (tab) {\n    case 0:\n      return (\n        <div>\n          <GeneralCharts />\n          <br />\n          <TownCharts />\n          <br />\n          <NewCasesCharts />\n        </div>\n      );\n    case 1:\n      return (\n        <div>\n          <RegionCharts />\n          <br />\n          <AgeCharts />\n        </div>\n      );\n    case 2:\n      return <SummaryCards />;\n    default:\n      return (<p>Bug? ¯\\_(ツ)_/¯</p>);\n  }\n}\n\nconst App: () => JSX.Element = (): JSX.Element => {\n  // ========== DEFINITIONS ==========\n  const styles = useStyles();\n  GeneralStore.update(s => { s.styles = styles });\n\n  const [isFetching, setIsFetching]: [boolean, Function] = useState(true);\n  const [renderTime, setRenderTime]: [number, Function] = useState(0);\n  const currTown: string = GeneralStore.useState(s => s.currentTown);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const townEntries = EntriesStore.useState(s => s.townEntries[currTown]);\n  let lastTownUpdate: string = \"\";\n  let lastPtUpdate: string = \"\";\n  const tab: number = GeneralStore.useState(s => s.tab);\n  let tabContent = getTabContent(tab);\n  const town = currTown[0] + currTown.slice(1).toLowerCase();\n\n  const isPtDataReady = ptEntries.getAll(KEY.CONFIRMED_PT).length > 0;\n  const isTownDataReady = townEntries && townEntries.getAll(KEY.TOWN_INCIDENCE_14).length > 0;\n\n  // ========== LOGIC ==========\n  useEffect(() => {\n    getPortugalData((e: EntriesAggregator<string, DateEntry>) => EntriesStore.update(s => { s.portugalEntries = e }));\n    getVaccineData((e: EntriesAggregator<string, DateEntry>) => EntriesStore.update(s => { s.vaccineEntries = e }));\n  }, []);\n  if (!isTownDataReady) {\n    getTownData(\n      currTown,\n      (e: EntriesAggregator<string, DateEntry>) => EntriesStore.update(s => { s.townEntries[currTown] = e })\n    );\n  }\n\n  if (!isFetching) {\n    lastTownUpdate = townEntries.getLast(KEY.TOWN_INCIDENCE_14).x;\n    lastPtUpdate = ptEntries.getLast(KEY.CONFIRMED_PT).x;\n    if (!renderTime) setRenderTime(Math.round(performance.now()));\n  }\n\n  if (isFetching && isTownDataReady && isPtDataReady)\n    setIsFetching(false);\n\n\n  // ========== RENDER ==========\n  return (\n    <div className={styles.root}>\n      { isFetching\n        ? <CircularProgress className={styles.progress} />\n        : <div>\n          <MyHeader />\n          <TextCard>\n            A última atualização destes dados ocorreu nas seguintes datas: {`Portugal/Norte => ${lastPtUpdate}, ${town} => ${lastTownUpdate}`}. Esta página carregou em {renderTime}ms.\n              </TextCard>\n\n          <br />\n          {tabContent}\n          <br />\n\n          <MyFooter />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}