{"version":3,"sources":["model/Entry.tsx","utils/EntriesOps.tsx","model/EntriesAggregator.tsx","utils/fetchData.tsx","component/card/TextCard.js","store/EntriesStore.tsx","store/GeneralStore.tsx","component/app/MyHeader.js","component/app/MyFooter.js","utils/chartUtils.tsx","component/card/InfoCard.js","component/app/SummaryCards.js","component/chart/DefaultLineChart.js","component/chart/MultiLineChart.js","config/themes.js","component/app/GeneralCharts.js","component/app/PortugalCharts.js","component/app/RegionCharts.js","config/demographicValues.js","component/app/TrofaCharts.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Entry","date","count","_dateStr","_date","_count","this","dateStr","parts","split","Date","Number","strToDate","parseInt","isNaN","getAdaptativePointRadius","entries","width","window","screen","availWidth","densityValue","length","Math","max","getEntriesSince","dateRange","dateLimit","setDate","getDate","getDateLimitFromRange","filter","e","derivateEntryValues","prevEntry","newCasesEntries","i","currEntry","push","smoothEntryValues","strength","map","entry","index","startIndex","finishIndex","min","relevantEntries","slice","sum","reduce","acc","round","convertDailyCountToDailyIncidency","populationSize","incidency","mergeEntryValuesBySum","entries1","entries2","mergeOp","console","error","mergeEntryValues","e1","e2","CONFIRMED_EXTRA_KEYS","CONFIRMED_0_9","CONFIRMED_10_19","CONFIRMED_20_29","CONFIRMED_30_39","CONFIRMED_40_49","CONFIRMED_50_59","CONFIRMED_60_69","CONFIRMED_70_79","CONFIRMED_80_PLUS","DEAD_EXTRA_KEYS","DEAD_0_9","DEAD_10_19","DEAD_20_29","DEAD_30_39","DEAD_40_49","DEAD_50_59","DEAD_60_69","DEAD_70_79","DEAD_80_PLUS","KEY","CONFIRMED_PT","CONFIRMED_NORTH","CONFIRMED_CENTER","CONFIRMED_LISBOA_TEJO","CONFIRMED_ALENTEJO","CONFIRMED_ALGARVE","NEWCASES_PT","ACTIVE_PT","HOSPITALIZED","HOSPITALIZED_NURSERY","HOSPITALIZED_ICU","DEAD_PT","CONFIRMED_0_9_F","CONFIRMED_0_9_M","CONFIRMED_10_19_F","CONFIRMED_10_19_M","CONFIRMED_20_29_F","CONFIRMED_20_29_M","CONFIRMED_30_39_F","CONFIRMED_30_39_M","CONFIRMED_40_49_F","CONFIRMED_40_49_M","CONFIRMED_50_59_F","CONFIRMED_50_59_M","CONFIRMED_60_69_F","CONFIRMED_60_69_M","CONFIRMED_70_79_F","CONFIRMED_70_79_M","CONFIRMED_80_PLUS_F","CONFIRMED_80_PLUS_M","DEAD_0_9_F","DEAD_0_9_M","DEAD_10_19_F","DEAD_10_19_M","DEAD_20_29_F","DEAD_20_29_M","DEAD_30_39_F","DEAD_30_39_M","DEAD_40_49_F","DEAD_40_49_M","DEAD_50_59_F","DEAD_50_59_M","DEAD_60_69_F","DEAD_60_69_M","DEAD_70_79_F","DEAD_70_79_M","DEAD_80_PLUS_F","DEAD_80_PLUS_M","TOWN_INCIDENCE_14","TOWN_CONFIRMED_14","EntriesAggregator","name","_name","key","warn","EntriesAggregatorImpl","builder","_aggregationMap","_aggregator","EntriesAggregatorBuilder","current","PtDataEntriesAggregatorBuilder","extraKeys","Object","forEach","v","entriesM","entriesF","addEntries","addByAgeGroup","preProcess","_getDataFromSource","sourceFile","url","headers","Headers","Accept","log","fetch","method","TextCard","children","Card","CardContent","Typography","variant","component","EntriesStore","Store","portugalEntries","trofaEntries","GeneralStore","styles","tab","MyHeader","useState","s","AppBar","position","className","appBar","Toolbar","FormControl","formControl","InputLabel","id","Select","labelId","value","onChange","update","target","MenuItem","Tabs","_e","indicatorColor","textColor","aria-label","Tab","label","MyFooter","href","getChartData","chosenTheme","datasets","categoryPercentage","barPercentage","lineTension","borderWidth","pointBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointRadius","data","labels","getMultipleChartData","entriesArray","chosenThemes","Array","from","keys","getChartOptions","beginAtZero","suggestedMin","suggestedMax","maintainAspectRatio","scales","yAxes","ticks","cardWrapper","element","Grid","item","xs","md","chartWrapper","chartElement","chartContainer","chartGroupWrapper","title","components","style","textAlign","gutterBottom","container","spacing","InfoCard","elevation","fontSize","fontWeight","color","SummaryCards","ptEntries","direction","alignItems","justify","cardGroupWrapper","getLast","DefaultLineChart","theme","zeroBased","lastNEntries","margin","options","defaultProps","MultiLineChart","dataArray","themes","lastNEntriesArray","d","lastEntriesFlat","flatMap","eArr","offset","getThemeFromRGB","r","g","b","hasBackground","otherOptions","unified","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","themeCyanNoBG","themeMagenta","themeMagentaNoBG","themeMagentaLight","themeMagentaDark","themeYellow","themeYellowNoBG","themeBlueNoBG","themeGreenNoBG","themeRed","themeGreyTransparent","pointHitRadius","borderDash","themeDark","severityTheme1","severityTheme2","severityTheme3","GeneralCharts","getAll","PortugalCharts","deathEntries","RegionCharts","northEntries","centerEntries","lisbonEntries","alentejoEntries","algarveEntries","northDailyIncidencyEntries","centerDailyIncidencyEntries","lisbonDailyIncidencyEntries","alentejoDailyIncidencyEntries","algarveDailyIncidencyEntries","TrofaCharts","trofaLineGenerator","useStyles","makeStyles","root","flexGrow","padding","paddingRight","height","progress","float","maxWidth","marginBottom","App","isFetching","setIsFetching","lastTownUpdate","lastPtUpdate","tabContent","getTabContent","useEffect","town","callback","filename","then","response","status","text","responseData","stream","Readable","pipe","Csv","on","concelho","values","addEntry","build","catch","err","getTownData","getPortugalData","CircularProgress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24f1b3dd.chunk.js","sourcesContent":["function strToDate(dateStr: string): Date {\n  const parts = dateStr.split('-');\n  return new Date(Number(parts[2]), Number(parts[1])-1, Number(parts[0]));\n}\n\nexport function dateToStr(date: Date): string {\n  return `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}`;\n}\n\nexport default class Entry {\n  _dateStr: string;\n  _date: Date;\n  _count: number;\n\n  constructor(date: string, count: string|number) {\n    this._dateStr = date;\n    this._date = strToDate(date);\n\n    this._count = typeof count === 'number' ? count : parseInt(count);\n\n    if(isNaN(this._count))\n      this._count = 0;\n  }\n\n  get dateStr(): string {\n    return this._dateStr;\n  }\n\n  get date(): Date {\n    return this._date;\n  }\n\n  get count(): number {\n    return this._count;\n  }\n}","import Entry from \"../model/Entry\";\n\n\nexport function getAdaptativePointRadius(entries: Entry[]): number {\n  const width = window.screen.availWidth;\n  const count = entries.length;\n  const densityRatio = count/width;\n  const densityValue = densityRatio*12;\n  const retVal = Math.max(4-densityValue, 1);\n  return retVal;\n}\n\nfunction getDateLimitFromRange(dateRange: number): Date {\n  const dateLimit = new Date();\n  dateLimit.setDate(dateLimit.getDate() - dateRange);\n  return dateLimit;\n}\n\nexport function getEntriesLineGenerator(entries: Entry[]): (v: number) => Entry[] {\n  return v => entries.map(e => new Entry(e.dateStr, v));\n}\n\nexport function getEntriesSince(dateRange: number, entries: Entry[]): Entry[] {\n  const dateLimit = getDateLimitFromRange(dateRange);\n  return entries.filter(e => e.date >= dateLimit);\n}\n\nexport function derivateEntryValues(entries: Entry[]): Entry[] {\n  let prevEntry = entries[0];\n  const newCasesEntries = [new Entry(prevEntry.dateStr, 0)];\n\n  for(let i=1; i<entries.length; i++) {\n    const currEntry = entries[i];\n    newCasesEntries.push(new Entry(currEntry.dateStr, currEntry.count - prevEntry.count));\n    prevEntry = currEntry;\n  }\n\n  return newCasesEntries;\n}\n\nexport function smoothEntryValues(entries: Entry[], strength: number = 7): Entry[] {\n  return entries.map((entry, index) => {\n    const startIndex = Math.max(0, index-strength);\n    const finishIndex = Math.min(entries.length, index+strength);\n    const relevantEntries = entries.slice(startIndex, finishIndex);\n    const sum = relevantEntries.reduce((acc, e) => acc + e.count, 0);\n    return new Entry(entry.dateStr, Math.round(sum / relevantEntries.length));\n  });\n}\n\nexport function convertDailyCountToDailyIncidency(entries: Entry[], populationSize: number): Entry[] {\n  return entries.map(entry => {\n    const incidency = Math.round(entry.count * 100000 / populationSize);\n    return new Entry(entry.dateStr, incidency);\n  });\n}\n\nfunction mergeEntryValues(entries1: Entry[], entries2: Entry[], mergeOp: (e1: Entry, e2: Entry) => Entry) {\n  if((entries1.length !== entries2.length) || (entries1[0].dateStr !== entries2[0].dateStr)) {\n    console.error(`The two Entry[] don't seem mergeable!\\n${entries1}\\n${entries2}`);\n    return [];\n  }\n\n  const entries: Entry[] = [];\n  for(let i=0; i<entries1.length; i++) {\n    entries.push(mergeOp(entries1[i], entries2[i]));\n  }\n  return entries;\n}\n\nexport function mergeEntryValuesBySum(entries1: Entry[], entries2: Entry[]) {\n  return mergeEntryValues(entries1, entries2, (e1, e2) => new Entry(e1.dateStr, e1.count + e2.count));\n}\n","import { mergeEntryValuesBySum } from '../utils/EntriesOps';\nimport Entry from './Entry';\n\nconst CONFIRMED_KEYS = {\n  CONFIRMED_0_9_F: 'confirmados_0_9_f',\n  CONFIRMED_0_9_M: 'confirmados_0_9_m',\n  CONFIRMED_10_19_F: 'confirmados_10_19_f',\n  CONFIRMED_10_19_M: 'confirmados_10_19_m',\n  CONFIRMED_20_29_F: 'confirmados_20_29_f',\n  CONFIRMED_20_29_M: 'confirmados_20_29_m',\n  CONFIRMED_30_39_F: 'confirmados_30_39_f',\n  CONFIRMED_30_39_M: 'confirmados_30_39_m',\n  CONFIRMED_40_49_F: 'confirmados_40_49_f',\n  CONFIRMED_40_49_M: 'confirmados_40_49_m',\n  CONFIRMED_50_59_F: 'confirmados_50_59_f',\n  CONFIRMED_50_59_M: 'confirmados_50_59_m',\n  CONFIRMED_60_69_F: 'confirmados_60_69_f',\n  CONFIRMED_60_69_M: 'confirmados_60_69_m',\n  CONFIRMED_70_79_F: 'confirmados_70_79_f',\n  CONFIRMED_70_79_M: 'confirmados_70_79_m',\n  CONFIRMED_80_PLUS_F: 'confirmados_80_plus_f',\n  CONFIRMED_80_PLUS_M: 'confirmados_80_plus_m',\n};\n\nconst CONFIRMED_EXTRA_KEYS = {\n  CONFIRMED_0_9: 'confirmados_0_9',\n  CONFIRMED_10_19: 'confirmados_10_19',\n  CONFIRMED_20_29: 'confirmados_20_29',\n  CONFIRMED_30_39: 'confirmados_30_39',\n  CONFIRMED_40_49: 'confirmados_40_49',\n  CONFIRMED_50_59: 'confirmados_50_59',\n  CONFIRMED_60_69: 'confirmados_60_69',\n  CONFIRMED_70_79: 'confirmados_70_79',\n  CONFIRMED_80_PLUS: 'confirmados_80_plus',\n};\n\nconst DEAD_KEYS = {\n  DEAD_0_9_F: 'obitos_0_9_f',\n  DEAD_0_9_M: 'obitos_0_9_m',\n  DEAD_10_19_F: 'obitos_10_19_f',\n  DEAD_10_19_M: 'obitos_10_19_m',\n  DEAD_20_29_F: 'obitos_20_29_f',\n  DEAD_20_29_M: 'obitos_20_29_m',\n  DEAD_30_39_F: 'obitos_30_39_f',\n  DEAD_30_39_M: 'obitos_30_39_m',\n  DEAD_40_49_F: 'obitos_40_49_f',\n  DEAD_40_49_M: 'obitos_40_49_m',\n  DEAD_50_59_F: 'obitos_50_59_f',\n  DEAD_50_59_M: 'obitos_50_59_m',\n  DEAD_60_69_F: 'obitos_60_69_f',\n  DEAD_60_69_M: 'obitos_60_69_m',\n  DEAD_70_79_F: 'obitos_70_79_f',\n  DEAD_70_79_M: 'obitos_70_79_m',\n  DEAD_80_PLUS_F: 'obitos_80_plus_f',\n  DEAD_80_PLUS_M: 'obitos_80_plus_m',\n};\n\nconst DEAD_EXTRA_KEYS = {\n  DEAD_0_9: 'obitos_0_9',\n  DEAD_10_19: 'obitos_10_19',\n  DEAD_20_29: 'obitos_20_29',\n  DEAD_30_39: 'obitos_30_39',\n  DEAD_40_49: 'obitos_40_49',\n  DEAD_50_59: 'obitos_50_59',\n  DEAD_60_69: 'obitos_60_69',\n  DEAD_70_79: 'obitos_70_79',\n  DEAD_80_PLUS: 'obitos_80_plus',\n};\n\nexport const KEY = {\n  // data.csv\n  CONFIRMED_PT: 'confirmados',\n  CONFIRMED_NORTH: 'confirmados_arsnorte',\n  CONFIRMED_CENTER: 'confirmados_arscentro',\n  CONFIRMED_LISBOA_TEJO: 'confirmados_arslvt',\n  CONFIRMED_ALENTEJO: 'confirmados_arsalentejo',\n  CONFIRMED_ALGARVE: 'confirmados_arsalgarve',\n  NEWCASES_PT: 'confirmados_novos',\n  ACTIVE_PT: 'ativos',\n  HOSPITALIZED: 'internados',\n  HOSPITALIZED_NURSERY: 'internados_enfermaria',\n  HOSPITALIZED_ICU: 'internados_uci',\n  DEAD_PT: 'obitos',\n  ...CONFIRMED_KEYS,\n  ...DEAD_KEYS,\n\n  // data.csv extra\n  ...CONFIRMED_EXTRA_KEYS,\n  ...DEAD_EXTRA_KEYS,\n\n  // data_concelhos_new.csv\n  TOWN_INCIDENCE_14: 'incidencia',\n  TOWN_CONFIRMED_14: 'confirmados_14',\n}\n\nexport default class EntriesAggregator {\n  _name: string;\n  constructor(name: string) {\n    this._name = name;\n  }\n  getAll(key: string): Entry[] {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getAll!`);\n    return [];\n  }\n  getLast(key: string): Entry {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getLastEntry!`);\n    return new Entry('', 0);\n  }\n}\n\nclass EntriesAggregatorImpl extends EntriesAggregator {\n  _aggregationMap: {[key: string]: Entry[]};\n\n  constructor(builder: EntriesAggregatorBuilder) {\n    super(builder.name);\n    this._aggregationMap = builder._aggregator;\n  }\n\n  getAll(key: string): Entry[] {\n    return this._aggregationMap[key] || [];\n  }\n\n  getLast(key: string): Entry {\n    const entries = this._aggregationMap[key];\n    return entries[entries.length - 1];\n  }\n}\n\nexport class EntriesAggregatorBuilder {\n  _name: string;\n  _aggregator: {[key: string]: Entry[]};\n\n  constructor(name: string) {\n    this._name = name;\n    this._aggregator = {};\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  addEntry(key: string, entry: Entry) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, entry];\n    return this;\n  }\n\n  addEntries(key: string, entries: Entry[]) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, ...entries];\n    return this;\n  }\n\n  build(): EntriesAggregatorImpl {\n    return new EntriesAggregatorImpl(this);\n  }\n}\n\nexport class PtDataEntriesAggregatorBuilder extends EntriesAggregatorBuilder {\n  addByAgeGroup(extraKeys: Object) {\n    Object.entries(extraKeys).forEach(([, v]) => {\n      const entriesM: Entry[] = this._aggregator[`${v}_m`];\n      const entriesF: Entry[] = this._aggregator[`${v}_f`];\n      this.addEntries(v, mergeEntryValuesBySum(entriesM, entriesF));\n    });\n  }\n\n  preProcess() {\n    this.addByAgeGroup(DEAD_EXTRA_KEYS);\n    this.addByAgeGroup(CONFIRMED_EXTRA_KEYS);\n  }\n\n  build(): EntriesAggregatorImpl {\n    this.preProcess();\n    return new EntriesAggregatorImpl(this);\n  }\n}","import { Readable } from 'stream';\nimport Csv from 'csv-parser';\nimport Entry from '../model/Entry';\nimport { EntriesAggregatorBuilder, PtDataEntriesAggregatorBuilder, KEY } from '../model/EntriesAggregator';\n\nfunction _getDataFromSource(sourceFile: string): Promise<Response> {\n  const url = 'https://raw.githubusercontent.com/dssg-pt/covid19pt-data/master/' + sourceFile;\n  const headers: Headers = new Headers({\n    //'Content-Type': 'application/x-www-form-urlencoded',\n    //'Origin': 'https://github.com',\n    //'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n    Accept: 'application/vnd.github.v3+json',\n    // 'Access-Control-Allow-Origin': '*',\n  });\n  console.log('[_getDataFromSource] Fetching ' + sourceFile);\n  return fetch(url, { method: 'GET', headers });\n}\n\nexport function getTownData(town: string, callback: Function) {\n  const filename = 'data_concelhos_new.csv';\n  _getDataFromSource(filename)\n    .then((response: Response) => {\n      if (response && response.status === 200)\n        return response.text();\n    })\n    .then(responseData => {\n      const builder = new EntriesAggregatorBuilder(filename);\n      const stream = new Readable();\n      stream.push(responseData);\n      stream.push(null);\n      stream\n        .pipe(Csv())\n        .on('data', data =>\n          data.concelho === town\n          && Object.values(KEY)\n          .forEach(key => data[key] && builder.addEntry(key, new Entry(data.data, data[key])))\n        )\n        .on('end', () => callback(builder.build()));\n    })\n    .catch(err => console.error(err));\n}\n\nexport function getPortugalData(callback: Function) {\n  const filename = 'data.csv';\n  _getDataFromSource(filename)\n    .then((response: Response) => {\n      if (response && response.status === 200)\n        return response.text();\n    })\n    .then(responseData => {\n      const builder = new PtDataEntriesAggregatorBuilder(filename);\n      const stream = new Readable();\n      stream.push(responseData);\n      stream.push(null);\n      stream\n        .pipe(Csv())\n        .on('data', data => {\n          Object.values(KEY)\n          .forEach(key => data[key] && builder.addEntry(key, new Entry(data.data, data[key])))\n        })\n        .on('end', () => callback(builder.build()));\n    })\n    .catch(err => console.error(err));\n}\n","import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst TextCard = ({ children }) => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        { children }\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default TextCard;\n","import { Store } from \"pullstate\";\nimport EntriesAggregator from \"../model/EntriesAggregator\";\n\nconst EntriesStore = new Store({\n  portugalEntries: new EntriesAggregator('DUMMY'),\n  trofaEntries: new EntriesAggregator('DUMMY'),\n  dateRange: 60,\n});\n\nexport default EntriesStore;\n","import { Store } from \"pullstate\";\n\nconst GeneralStore = new Store({\n  styles: {},\n  tab: 0,\n});\n\nexport default GeneralStore;\n","import React from 'react';\nimport { AppBar, FormControl, InputLabel, Select, MenuItem, Tab, Tabs, Toolbar } from '@material-ui/core';\nimport EntriesStore from '../../store/EntriesStore';\nimport GeneralStore from '../../store/GeneralStore';\n\nconst MyHeader = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  return (\n    <AppBar position=\"sticky\" className={styles.appBar}>\n      <Toolbar>\n      <FormControl className={styles.formControl}>\n        <InputLabel id=\"time-label\">Tempo</InputLabel>\n        <Select\n          labelId=\"time-label\"\n          id=\"time-select\"\n          value={EntriesStore.useState(s => s.dateRange)}\n          onChange={e => EntriesStore.update(s => {s.dateRange = e.target.value})}\n        >\n          <MenuItem value={30}>30 dias</MenuItem>\n          <MenuItem value={60}>60 dias</MenuItem>\n          <MenuItem value={90}>90 dias</MenuItem>\n          <MenuItem value={999999}>Desde sempre</MenuItem>\n        </Select>\n      </FormControl>\n      <Tabs\n          value={GeneralStore.useState(s => s.tab)}\n          onChange={(_e, v) => GeneralStore.update(s => {s.tab = v})}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Gráficos\" />\n          <Tab label=\"Infos\" />\n        </Tabs>\n        </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default MyHeader;\n","import React from 'react';\nimport { Typography, Card, CardContent } from '@material-ui/core';\n\n\nconst MyFooter = () => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        Os dados aqui apresentados são extraídos do repositório <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a>.\n      <br />\n      O código para este dashboard pode ser consultado <a href=\"https://github.com/DiogoDuque/covid19TrofaGraph\">aqui</a>.\n      <br />\n        {/*The data hereby presented is extracted from the <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a> repository.*/}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default MyFooter;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Entry from \"../model/Entry\";\nimport { getAdaptativePointRadius } from './EntriesOps';\n\n/** CHART ARGUMENTS */\n\nexport const getChartData = (entries: Entry[], label: string, chosenTheme: object) => ({\n  datasets: [{\n    label,\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entries),\n    data: entries.map(entry => entry.count),\n    ...chosenTheme,\n  }],\n  labels: entries.map(entry => entry.dateStr),\n});\n\nexport const getMultipleChartData = (entriesArray: Entry[][], labels: string[], chosenThemes: object[]) => ({\n  datasets: Array.from(Array(entriesArray.length).keys()).map(i => ({\n    label: labels[i],\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entriesArray[i]),\n    data: entriesArray[i].map(entry => entry.count),\n    ...chosenThemes[i],\n  })),\n  labels: entriesArray[0].map(entry => entry.dateStr),\n});\n\nexport const getChartOptions = (beginAtZero=false, suggestedMin=null, suggestedMax=null) => ({\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero,\n        suggestedMin,\n        suggestedMax,\n      }\n    }]\n  },\n});\n\n/** HOF WRAPPERS */\nlet key=0;\nconst cardWrapper = (element: JSX.Element): JSX.Element => (\n  <Grid key={key++} item xs={6} md={3}>\n    { element }\n  </Grid>\n);\n\nexport const cardGroupWrapper = (...components: JSX.Element[]): JSX.Element => (\n  <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\n    { components.map(component => cardWrapper(component)) }\n  </Grid>\n);\n\nconst chartWrapper = (chartElement: JSX.Element, styles: any): JSX.Element => (\n  <Grid item xs={12} key={key++}>\n    <div className={styles.chartContainer}>\n      {chartElement}\n    </div>\n  </Grid>\n);\n\nexport const chartGroupWrapper = (title: String, styles: any, ...components: JSX.Element[]) => (\n  <div>\n    <Typography variant=\"h3\" style={{ textAlign: 'center' }} gutterBottom>\n      {title}\n    </Typography>\n    <Grid container spacing={3}>\n      {components.map(component => chartWrapper(component, styles))}\n    </Grid>\n  </div>\n);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Typography, Card, CardContent } from '@material-ui/core';\nimport Entry from \"../../model/Entry\";\n\nconst InfoCard = ({title, entry}) => {\n\n  return (\n    <Card elevation={4}>\n      <CardContent>\n        <Typography style={{ fontSize: 15, fontWeight: 'bold' }} color=\"textSecondary\" gutterBottom>\n            {title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {entry.count}\n        </Typography>\n        <Typography style={{ fontSize: 11 }} color=\"textSecondary\">\n          {`Última atualização: ${entry.dateStr}`}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  entry: PropTypes.instanceOf(Entry).isRequired,\n};\n\nexport default InfoCard;","import React from 'react';\nimport { cardGroupWrapper } from '../../utils/chartUtils';\nimport { KEY } from '../../model/EntriesAggregator';\nimport InfoCard from '../card/InfoCard';\nimport EntriesStore from \"../../store/EntriesStore\";\n\nconst SummaryCards = () => {\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n\n  return cardGroupWrapper(\n    <InfoCard title=\"Casos ativos em Portugal\" entry={ptEntries.getLast(KEY.ACTIVE_PT)} />,\n    <InfoCard title=\"Casos novos em Portugal\" entry={ptEntries.getLast(KEY.NEWCASES_PT)} />,\n    <InfoCard title=\"Incidência na Trofa\" entry={trofaEntries.getLast(KEY.TOWN_INCIDENCE_14)} />,\n    <InfoCard title=\"Casos novos (14d) na Trofa\" entry={trofaEntries.getLast(KEY.TOWN_CONFIRMED_14)} />,\n  );\n}\n\nexport default SummaryCards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport Entry from '../../model/Entry';\nimport { getChartOptions, getChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst DefaultLineChart = ({ data, dateRange, label, theme, zeroBased }) => {\n  const lastNEntries = getEntriesSince(dateRange, data);\n  const min = Math.min(...lastNEntries.map(e=>e.count));\n  const max = Math.max(...lastNEntries.map(e=>e.count));\n  const margin = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + margin);\n\n  let suggestedMin = Math.round(min - margin);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  \n  return (\n    <Line\n      data={getChartData(lastNEntries, label, theme)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nDefaultLineChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.instanceOf(Entry)).isRequired,\n  dateRange: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  zeroBased: PropTypes.bool,\n};\n\nDefaultLineChart.defaultProps = {\n  zeroBased: true,\n  dateRange: 0,\n};\n\nexport default DefaultLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport Entry from '../../model/Entry';\nimport { getChartOptions, getMultipleChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst MultiLineChart = ({ dataArray, dateRange, labels, themes, zeroBased }) => {\n  const lastNEntriesArray = dataArray.map(d=>getEntriesSince(dateRange, d));\n  const lastEntriesFlat = lastNEntriesArray.flatMap(eArr=>eArr.map(e=>e.count));\n  const min = Math.min(...lastEntriesFlat);\n  const max = Math.max(...lastEntriesFlat);\n  const offset = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + offset);\n\n  let suggestedMin = Math.round(min - offset);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  if(dataArray.length !== labels.length || labels.length !== themes.length) {\n    console.error('Chart arguments cardinality did not match!');\n    return <Line options={getChartOptions(false, suggestedMin, suggestedMax)}/>\n  }\n  return (\n    <Line\n      data={getMultipleChartData(lastNEntriesArray, labels, themes)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nMultiLineChart.propTypes = {\n  dataArray: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.instanceOf(Entry))).isRequired,\n  dateRange: PropTypes.number.isRequired,\n  labels: PropTypes.arrayOf(PropTypes.string.isRequired),\n  themes: PropTypes.arrayOf(PropTypes.object.isRequired),\n  zeroBased: PropTypes.bool,\n};\n\nMultiLineChart.defaultProps = {\n  zeroBased: true,\n  dateRange: 0,\n};\n\nexport default MultiLineChart;\n","function getThemeFromRGB(r,g,b, hasBackground=true, otherOptions={}) {\n  const unified = `${r},${g},${b}`;\n  return {\n    backgroundColor: hasBackground ? `rgba(${unified},0.4)` : 'rgba(0,0,0,0)',\n    borderColor: `rgba(${unified},1)`,\n    pointBorderColor: `rgba(${unified},1)`,\n    pointHoverBackgroundColor: `rgba(${unified},1)`,\n    ...otherOptions,\n  }\n}\n\n// CYAN\nexport const themeCyan = getThemeFromRGB(75, 192, 192);\nexport const themeCyanNoBG = getThemeFromRGB(75, 192, 192, false);\n\n\n// MAGENTA\nexport const themeMagenta = getThemeFromRGB(192, 75, 192);\nexport const themeMagentaNoBG = getThemeFromRGB(192, 75, 192, false);\nexport const themeMagentaLight = getThemeFromRGB(217, 128, 217);\nexport const themeMagentaDark = getThemeFromRGB(140, 83, 140);\n\n\n// YELLOW\nexport const themeYellow = getThemeFromRGB(192, 192, 75);\nexport const themeYellowNoBG = getThemeFromRGB(192, 192, 75, false);\nexport const themeYellowLight = getThemeFromRGB(217, 217, 128);\nexport const themeYellowDark = getThemeFromRGB(140, 140, 83);\n\n\n// BLUE\nexport const themeBlue = getThemeFromRGB(0, 80, 255);\nexport const themeBlueNoBG = getThemeFromRGB(0, 80, 255, false);\n\n\n// GREEN\nexport const themeGreen = getThemeFromRGB(0, 255, 80);\nexport const themeGreenNoBG = getThemeFromRGB(0, 255, 80, false);\n\n\n// RED\nexport const themeRed = getThemeFromRGB(255, 80, 30);\n\n\n// OTHERS\nexport const themeGreyTransparent = getThemeFromRGB(200, 200, 200, false, {pointRadius:0, pointHitRadius:0, borderDash:[8]});\nexport const themeDark = getThemeFromRGB(20, 20, 20);\n\nexport const severityTheme1 = getThemeFromRGB(255, 189, 0, false);\nexport const severityTheme2 = getThemeFromRGB(255, 84, 0, false);\nexport const severityTheme3 = getThemeFromRGB(158, 0, 89, false);\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport DefaultLineChart from \"../chart/DefaultLineChart\";\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeMagenta, themeMagentaDark, themeMagentaLight } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst GeneralCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  return chartGroupWrapper('Casos ativos', styles,\n    <DefaultLineChart\n      data={ptEntries.getAll(KEY.ACTIVE_PT)}\n      dateRange={dateRange}\n      label=\"Casos ativos em Portugal\"\n      theme={themeMagenta}\n      zeroBased={true}\n    />,\n    <MultiLineChart\n      dataArray={[ptEntries.getAll(KEY.HOSPITALIZED_NURSERY), ptEntries.getAll(KEY.HOSPITALIZED_ICU)]}\n      dateRange={dateRange}\n      labels={[\"Internados em Enfermaria em Portugal\", \"Internados em UCI em Portugal\"]}\n      themes={[themeMagentaLight, themeMagentaDark]}\n      zeroBased={true}\n    />\n  );\n}\n\nexport default GeneralCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { smoothEntryValues, derivateEntryValues } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeRed, themeDark, themeGreyTransparent } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst PortugalCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const deathEntries = derivateEntryValues(ptEntries.getAll(KEY.DEAD_PT));\n\n  return chartGroupWrapper('Evolução em Portugal', styles,\n\n    <MultiLineChart\n      dataArray={[ptEntries.getAll(KEY.NEWCASES_PT), smoothEntryValues(ptEntries.getAll(KEY.NEWCASES_PT))]}\n      dateRange={dateRange}\n      labels={['Casos novos em Portugal', '']}\n      themes={[themeRed, themeGreyTransparent]}\n    />,\n\n    <MultiLineChart\n    dataArray={[deathEntries, smoothEntryValues(deathEntries)]}\n    dateRange={dateRange}\n    labels={['Mortes em Portugal', '']}\n    themes={[themeDark, themeGreyTransparent]}\n  />,\n  );\n}\n\nexport default PortugalCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { derivateEntryValues, convertDailyCountToDailyIncidency } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport {\n  themeYellowNoBG, themeCyanNoBG, themeMagentaNoBG, themeBlueNoBG, themeGreenNoBG\n} from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport {\n  POPULATION_NORTH, POPULATION_CENTER, POPULATION_LISBOA, POPULATION_ALENTEJO, POPULATION_ALGARVE\n} from '../../config/demographicValues';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst RegionCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const northEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_NORTH));\n  const centerEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_CENTER));\n  const lisbonEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_LISBOA_TEJO));\n  const alentejoEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALENTEJO));\n  const algarveEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALGARVE));\n  const northDailyIncidencyEntries = convertDailyCountToDailyIncidency(northEntries, POPULATION_NORTH);\n  const centerDailyIncidencyEntries = convertDailyCountToDailyIncidency(centerEntries, POPULATION_CENTER);\n  const lisbonDailyIncidencyEntries = convertDailyCountToDailyIncidency(lisbonEntries, POPULATION_LISBOA);\n  const alentejoDailyIncidencyEntries = convertDailyCountToDailyIncidency(alentejoEntries, POPULATION_ALENTEJO);\n  const algarveDailyIncidencyEntries = convertDailyCountToDailyIncidency(algarveEntries, POPULATION_ALGARVE);\n\n  return chartGroupWrapper('Evolução regional', styles,\n\n    // #### ZONAS DE PORTUGAL ####\n    <MultiLineChart\n    dataArray={[northEntries, centerEntries, lisbonEntries, alentejoEntries, algarveEntries]}\n      dateRange={dateRange}\n      labels={[\n        'Casos novos no Norte', 'Casos novos no Centro', 'Casos novos em Lisboa/V.Tejo',\n        'Casos novos no Alentejo', 'Casos novos no Algarve']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n\n    // #### INCIDENCIA NAS ZONAS DE PORTUGAL ####\n    <MultiLineChart\n      dataArray={[\n        northDailyIncidencyEntries, centerDailyIncidencyEntries, lisbonDailyIncidencyEntries,\n        alentejoDailyIncidencyEntries, algarveDailyIncidencyEntries\n      ]}\n      dateRange={dateRange}\n      labels={[\n        'Incidência no Norte (a 1 dia p/ 100k hab.)', 'Incidência no Centro (a 1 dia p/ 100k hab.)',\n        'Incidência em Lisboa/V.Tejo (a 1 dia p/ 100k hab.)', 'Incidência no Alentejo (a 1 dia p/ 100k hab.)',\n        'Incidência no Algarve (a 1 dia p/ 100k hab.)']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n  );\n}\n\nexport default RegionCharts;\n","// Data retrieved from:\n// https://www.pordata.pt/Municipios/Popula%c3%a7%c3%a3o+residente+segundo+os+Censos+total+e+por+dimens%c3%a3o+dos+lugares-24\n\nexport const POPULATION_PT =       10562178;\nexport const POPULATION_NORTH =     3689682;\nexport const POPULATION_CENTER =    2327755;\nexport const POPULATION_LISBOA =    2821876;\nexport const POPULATION_ALENTEJO =   757302;\nexport const POPULATION_ALGARVE =    451006;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { getEntriesLineGenerator } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeYellow, severityTheme1, severityTheme2, severityTheme3 } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst TrofaCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const trofaLineGenerator = getEntriesLineGenerator(trofaEntries.getAll(KEY.TOWN_INCIDENCE_14));\n  return chartGroupWrapper('Evolução na Trofa', styles,\n  \n    <MultiLineChart\n      dataArray={[\n        trofaEntries.getAll(KEY.TOWN_INCIDENCE_14), trofaLineGenerator(240),\n        trofaLineGenerator(480), trofaLineGenerator(960),\n      ]}\n      dateRange={dateRange}\n      labels={[\n        'Incidência na Trofa (a 14 dias p/ 100k hab.)', 'Risco elevado',\n        'Risco muito elevado', 'Risco extremamente elevado'\n      ]}\n      themes={[themeYellow, severityTheme1, severityTheme2, severityTheme3]}\n    />,\n  );\n}\n\nexport default TrofaCharts;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport EntriesAggregator, { KEY } from './model/EntriesAggregator';\nimport { getTownData, getPortugalData } from './utils/fetchData';\nimport TextCard from './component/card/TextCard';\nimport MyHeader from './component/app/MyHeader';\nimport MyFooter from './component/app/MyFooter';\nimport SummaryCards from './component/app/SummaryCards';\nimport GeneralCharts from './component/app/GeneralCharts';\nimport NewCasesCharts from './component/app/PortugalCharts';\nimport RegionCharts from './component/app/RegionCharts';\nimport TrofaCharts from './component/app/TrofaCharts';\nimport EntriesStore from './store/EntriesStore';\nimport GeneralStore from './store/GeneralStore';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    'backgroundColor': '#f5f5f5',\n    flexGrow: 1,\n    'align-items': 'center',\n    'justify-content': 'center',\n    padding: 15,\n    paddingRight: 30,\n  },\n  chartContainer: {\n    position: 'relative',\n    margin: 'auto',\n    height: '50vh',\n    width: '90vw',\n  },\n  progress: {\n    float: 'none',\n    margin: '0 auto',\n  },\n  appBar: {\n    maxWidth: 500,\n    marginBottom: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  formControl: {\n    margin: 10,\n    // minWidth: 120,\n  },\n}));\n\nfunction getTabContent(tab: number) {\n  switch (tab) {\n    case 0:\n      return (\n        <div>\n          <GeneralCharts />\n          <br />\n          <TrofaCharts />\n          <br />\n          <NewCasesCharts />\n          <br />\n          <RegionCharts />\n        </div>\n      );\n    case 1:\n      return <SummaryCards />;\n    default:\n      return (<p>Bug? ¯\\_(ツ)_/¯</p>);\n  }\n}\n\nconst App: () => JSX.Element = (): JSX.Element => {\n  // ========== DEFINITIONS ==========\n  const styles = useStyles();\n  GeneralStore.update(s => {s.styles = styles});\n\n  const [isFetching, setIsFetching]: [boolean, Function] = useState(true);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n  let lastTownUpdate: string = \"\";\n  let lastPtUpdate: string = \"\";\n  const tab: number = GeneralStore.useState(s => s.tab);\n  let tabContent = getTabContent(tab);\n\n\n  // ========== LOGIC ==========\n  useEffect(() => {\n    getTownData('TROFA', (e: EntriesAggregator) => EntriesStore.update(s => {s.trofaEntries = e}));\n    getPortugalData((e: EntriesAggregator) => EntriesStore.update(s => {s.portugalEntries = e}));\n  }, []);\n\n  if (!isFetching) {\n    lastTownUpdate = trofaEntries.getLast(KEY.TOWN_INCIDENCE_14).dateStr;\n    lastPtUpdate = ptEntries.getLast(KEY.CONFIRMED_PT).dateStr;\n  }\n\n  if (isFetching && trofaEntries.getAll(KEY.TOWN_INCIDENCE_14).length > 0 && ptEntries.getAll(KEY.CONFIRMED_PT).length > 0)\n    setIsFetching(false);\n\n\n  // ========== RENDER ==========\n  return (\n    <div className={styles.root}>\n      { isFetching\n        ? <CircularProgress className={styles.progress} />\n        : <div>\n            <MyHeader />\n            <TextCard>\n              A última atualização destes dados ocorreu nas seguintes datas: {`Portugal/Norte => ${lastPtUpdate}, Trofa => ${lastTownUpdate}`}.\n              </TextCard>\n\n            <br />\n            {tabContent}\n            <br />\n\n            <MyFooter />\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}