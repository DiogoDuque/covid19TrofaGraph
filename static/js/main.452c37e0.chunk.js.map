{"version":3,"sources":["utils/EntriesOps.tsx","model/EntriesAggregator.tsx","model/DateEntry.tsx","model/Entry.tsx","utils/fetchData.tsx","component/card/TextCard.js","store/EntriesStore.tsx","store/GeneralStore.tsx","component/app/MyHeader.js","component/app/MyFooter.js","utils/chartUtils.tsx","component/card/InfoCard.js","component/app/SummaryCards.js","component/chart/DefaultLineChart.js","component/chart/MultiLineChart.js","config/themes.js","component/app/GeneralCharts.js","component/app/PortugalCharts.js","config/demographicValues.js","component/app/RegionCharts.js","component/app/TrofaCharts.js","component/app/AgeCharts.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["getEntriesSince","dateRange","entries","dateLimit","Date","setDate","getDate","getDateLimitFromRange","filter","e","date","derivateEntryValues","prevEntry","newCasesEntries","buildNewWith","x","i","length","currEntry","push","y","smoothEntryValues","strength","map","entry","index","startIndex","Math","max","finishIndex","min","relevantEntries","slice","sum","reduce","acc","round","convertDailyCountToDailyIncidency","populationSize","incidency","mergeEntryValuesBySum","entries1","entries2","mergeOp","console","error","mergeEntryValues","e1","e2","CONFIRMED_EXTRA_KEYS","CONFIRMED_0_9","CONFIRMED_10_19","CONFIRMED_20_29","CONFIRMED_30_39","CONFIRMED_40_49","CONFIRMED_50_59","CONFIRMED_60_69","CONFIRMED_70_79","CONFIRMED_80_PLUS","DEAD_EXTRA_KEYS","DEAD_0_9","DEAD_10_19","DEAD_20_29","DEAD_30_39","DEAD_40_49","DEAD_50_59","DEAD_60_69","DEAD_70_79","DEAD_80_PLUS","KEY","CONFIRMED_PT","CONFIRMED_NORTH","CONFIRMED_CENTER","CONFIRMED_LISBOA_TEJO","CONFIRMED_ALENTEJO","CONFIRMED_ALGARVE","NEWCASES_PT","ACTIVE_PT","HOSPITALIZED","HOSPITALIZED_NURSERY","HOSPITALIZED_ICU","DEAD_PT","CONFIRMED_0_9_F","CONFIRMED_0_9_M","CONFIRMED_10_19_F","CONFIRMED_10_19_M","CONFIRMED_20_29_F","CONFIRMED_20_29_M","CONFIRMED_30_39_F","CONFIRMED_30_39_M","CONFIRMED_40_49_F","CONFIRMED_40_49_M","CONFIRMED_50_59_F","CONFIRMED_50_59_M","CONFIRMED_60_69_F","CONFIRMED_60_69_M","CONFIRMED_70_79_F","CONFIRMED_70_79_M","CONFIRMED_80_PLUS_F","CONFIRMED_80_PLUS_M","DEAD_0_9_F","DEAD_0_9_M","DEAD_10_19_F","DEAD_10_19_M","DEAD_20_29_F","DEAD_20_29_M","DEAD_30_39_F","DEAD_30_39_M","DEAD_40_49_F","DEAD_40_49_M","DEAD_50_59_F","DEAD_50_59_M","DEAD_60_69_F","DEAD_60_69_M","DEAD_70_79_F","DEAD_70_79_M","DEAD_80_PLUS_F","DEAD_80_PLUS_M","TOWN_INCIDENCE_14","TOWN_CONFIRMED_14","EntriesAggregator","name","_name","this","key","warn","EntriesAggregatorImpl","builder","_aggregationMap","_aggregator","EntriesAggregatorBuilder","current","PtDataEntriesAggregatorBuilder","extraKeys","Object","forEach","v","entriesM","entriesF","addEntries","addByAgeGroup","preProcess","DateEntry","count","parseInt","_date","isNaN","_y","dateStr","parts","split","Number","strToDate","_x","Error","_getDataFromSource","sourceFile","url","headers","Headers","Accept","log","fetch","method","TextCard","children","Card","CardContent","Typography","variant","component","EntriesStore","Store","portugalEntries","trofaEntries","GeneralStore","styles","tab","MyHeader","useState","isTimeDialogOpen","setTimeDialogOpen","customTimeValue","setCustomTimeValue","customTimeValueTmp","setCustomTimeValueTmp","s","validateTimeValue","n","parsedTimeValue","isInteger","closeTimeDialog","newValue","undefined","update","isTimeValueValid","AppBar","position","className","appBar","Toolbar","FormControl","formControl","InputLabel","id","Select","labelId","value","onChange","target","nativeEvent","innerText","MenuItem","Tabs","_e","indicatorColor","textColor","aria-label","scrollButtons","Tab","label","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","type","fullWidth","DialogActions","Button","onClick","color","disabled","MyFooter","href","getAdaptativePointRadius","width","window","screen","availWidth","densityValue","getChartData","chosenTheme","datasets","categoryPercentage","barPercentage","lineTension","borderWidth","pointBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointRadius","data","labels","getMultipleChartData","entriesArray","chosenThemes","Array","from","keys","getChartOptions","beginAtZero","suggestedMin","suggestedMax","maintainAspectRatio","scales","yAxes","ticks","cardWrapper","element","Grid","item","xs","md","chartWrapper","chartElement","chartContainer","chartGroupWrapper","title","components","style","textAlign","gutterBottom","container","spacing","InfoCard","elevation","fontSize","fontWeight","SummaryCards","ptEntries","direction","alignItems","justify","cardGroupWrapper","getLast","DefaultLineChart","theme","zeroBased","lastNEntries","options","defaultProps","MultiLineChart","dataArray","themes","lastNEntriesArray","d","lastEntriesFlat","flatMap","eArr","offset","getThemeFromRGB","r","g","b","hasBackground","otherOptions","unified","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","themeCyanNoBG","themeMagenta","themeMagentaNoBG","themeMagentaLight","themeMagentaLightNoBG","themeMagentaDark","themeMagentaDarkNoBG","themeYellow","themeYellowNoBG","themeYellowDarkNoBG","themeBlueNoBG","themeGreenNoBG","themeRed","themeRedNoBG","themeGreyTransparent","pointHitRadius","borderDash","themeDark","severityTheme1","severityTheme2","severityTheme3","GeneralCharts","getAll","PortugalCharts","deathEntries","POPULATION_0_9","POPULATION_10_19","POPULATION_20_29","POPULATION_30_39","POPULATION_40_49","POPULATION_50_59","POPULATION_60_69","POPULATION_70_PLUS","RegionCharts","northEntries","centerEntries","lisbonEntries","alentejoEntries","algarveEntries","northDailyIncidencyEntries","centerDailyIncidencyEntries","lisbonDailyIncidencyEntries","alentejoDailyIncidencyEntries","algarveDailyIncidencyEntries","TrofaCharts","trofaLineGenerator","AgeCharts","new0_9","new10_19","new20_29","new30_39","new40_49","new50_59","new60_69","new70_plus","newDailyIncidency0_9","newDailyIncidency10_19","newDailyIncidency20_29","newDailyIncidency30_39","newDailyIncidency40_49","newDailyIncidency50_59","newDailyIncidency60_69","newDailyIncidency70_plus","dead0_9","dead10_19","dead20_29","dead30_39","dead40_49","dead50_59","dead60_69","dead70_plus","deadDailyIncidency0_9","deadDailyIncidency10_19","deadDailyIncidency20_29","deadDailyIncidency30_39","deadDailyIncidency40_49","deadDailyIncidency50_59","deadDailyIncidency60_69","deadDailyIncidency70_plus","a","useStyles","makeStyles","root","flexGrow","padding","paddingRight","height","progress","float","marginBottom","minWidth","App","isFetching","setIsFetching","renderTime","setRenderTime","lastTownUpdate","lastPtUpdate","tabContent","getTabContent","isPtDataReady","isTrofaDataReady","useEffect","town","callback","filename","then","response","status","text","responseData","stream","Readable","pipe","Csv","on","concelho","values","addEntry","build","catch","err","getTownData","getPortugalData","performance","now","CircularProgress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.452c37e0.chunk.js","sourcesContent":["import Entry from \"../model/Entry\";\nimport DateEntry from \"../model/DateEntry\";\n\nfunction getDateLimitFromRange(dateRange: number): Date {\n  const dateLimit = new Date();\n  dateLimit.setDate(dateLimit.getDate() - dateRange);\n  return dateLimit;\n}\n\nexport function getEntriesLineGenerator<X>(entries: Entry<X>[]): (v: number) => Entry<X>[] {\n  return v => entries.map(e => e.buildNewWith(e.x, v));\n}\n\nexport function getEntriesSince(dateRange: number, entries: DateEntry[]): DateEntry[] {\n  const dateLimit = getDateLimitFromRange(dateRange);\n  return entries.filter(e => e.date >= dateLimit);\n}\n\nexport function derivateEntryValues<X>(entries: Entry<X>[]): Entry<X>[] {\n  let prevEntry = entries[0];\n  const newCasesEntries = [prevEntry.buildNewWith(prevEntry.x, 0)];\n\n  for(let i=1; i<entries.length; i++) {\n    const currEntry = entries[i];\n    newCasesEntries.push(prevEntry.buildNewWith(currEntry.x, currEntry.y - prevEntry.y));\n    prevEntry = currEntry;\n  }\n\n  return newCasesEntries;\n}\n\nexport function smoothEntryValues<X>(entries: Entry<X>[], strength: number = 7): Entry<X>[] {\n  return entries.map((entry, index) => {\n    const startIndex = Math.max(0, index-strength);\n    const finishIndex = Math.min(entries.length, index+strength);\n    const relevantEntries = entries.slice(startIndex, finishIndex);\n    const sum = relevantEntries.reduce((acc, e) => acc + e.y, 0);\n    return entry.buildNewWith(entry.x, Math.round(sum / relevantEntries.length));\n  });\n}\n\nexport function convertDailyCountToDailyIncidency<X>(entries: Entry<X>[], populationSize: number): Entry<X>[] {\n  return entries.map(entry => {\n    const incidency = Math.round(entry.y * 100000 / populationSize);\n    return entry.buildNewWith(entry.x, incidency);\n  });\n}\n\nfunction mergeEntryValues<E extends Entry<string>>(entries1: E[], entries2: E[], mergeOp: (e1: E, e2: E) => E) {\n  if((entries1.length !== entries2.length) || (entries1[0].x !== entries2[0].x)) {\n    console.error(`The two Entry[] don't seem mergeable!\\n${entries1}\\n${entries2}`);\n    return [];\n  }\n\n  const entries: E[] = [];\n  for(let i=0; i<entries1.length; i++) {\n    entries.push(mergeOp(entries1[i], entries2[i]));\n  }\n  return entries;\n}\n\nexport function mergeEntryValuesBySum(entries1: Entry<string>[], entries2: Entry<string>[]): Entry<string>[] {\n  return mergeEntryValues(entries1, entries2, (e1, e2) => e1.buildNewWith(e1.x, e1.y + e2.y));\n}\n","import { mergeEntryValuesBySum } from '../utils/EntriesOps';\nimport DateEntry from './DateEntry';\nimport Entry from './Entry';\n\nconst CONFIRMED_KEYS = {\n  CONFIRMED_0_9_F: 'confirmados_0_9_f',\n  CONFIRMED_0_9_M: 'confirmados_0_9_m',\n  CONFIRMED_10_19_F: 'confirmados_10_19_f',\n  CONFIRMED_10_19_M: 'confirmados_10_19_m',\n  CONFIRMED_20_29_F: 'confirmados_20_29_f',\n  CONFIRMED_20_29_M: 'confirmados_20_29_m',\n  CONFIRMED_30_39_F: 'confirmados_30_39_f',\n  CONFIRMED_30_39_M: 'confirmados_30_39_m',\n  CONFIRMED_40_49_F: 'confirmados_40_49_f',\n  CONFIRMED_40_49_M: 'confirmados_40_49_m',\n  CONFIRMED_50_59_F: 'confirmados_50_59_f',\n  CONFIRMED_50_59_M: 'confirmados_50_59_m',\n  CONFIRMED_60_69_F: 'confirmados_60_69_f',\n  CONFIRMED_60_69_M: 'confirmados_60_69_m',\n  CONFIRMED_70_79_F: 'confirmados_70_79_f',\n  CONFIRMED_70_79_M: 'confirmados_70_79_m',\n  CONFIRMED_80_PLUS_F: 'confirmados_80_plus_f',\n  CONFIRMED_80_PLUS_M: 'confirmados_80_plus_m',\n};\n\nconst CONFIRMED_EXTRA_KEYS = {\n  CONFIRMED_0_9: 'confirmados_0_9',\n  CONFIRMED_10_19: 'confirmados_10_19',\n  CONFIRMED_20_29: 'confirmados_20_29',\n  CONFIRMED_30_39: 'confirmados_30_39',\n  CONFIRMED_40_49: 'confirmados_40_49',\n  CONFIRMED_50_59: 'confirmados_50_59',\n  CONFIRMED_60_69: 'confirmados_60_69',\n  CONFIRMED_70_79: 'confirmados_70_79',\n  CONFIRMED_80_PLUS: 'confirmados_80_plus',\n};\n\nconst DEAD_KEYS = {\n  DEAD_0_9_F: 'obitos_0_9_f',\n  DEAD_0_9_M: 'obitos_0_9_m',\n  DEAD_10_19_F: 'obitos_10_19_f',\n  DEAD_10_19_M: 'obitos_10_19_m',\n  DEAD_20_29_F: 'obitos_20_29_f',\n  DEAD_20_29_M: 'obitos_20_29_m',\n  DEAD_30_39_F: 'obitos_30_39_f',\n  DEAD_30_39_M: 'obitos_30_39_m',\n  DEAD_40_49_F: 'obitos_40_49_f',\n  DEAD_40_49_M: 'obitos_40_49_m',\n  DEAD_50_59_F: 'obitos_50_59_f',\n  DEAD_50_59_M: 'obitos_50_59_m',\n  DEAD_60_69_F: 'obitos_60_69_f',\n  DEAD_60_69_M: 'obitos_60_69_m',\n  DEAD_70_79_F: 'obitos_70_79_f',\n  DEAD_70_79_M: 'obitos_70_79_m',\n  DEAD_80_PLUS_F: 'obitos_80_plus_f',\n  DEAD_80_PLUS_M: 'obitos_80_plus_m',\n};\n\nconst DEAD_EXTRA_KEYS = {\n  DEAD_0_9: 'obitos_0_9',\n  DEAD_10_19: 'obitos_10_19',\n  DEAD_20_29: 'obitos_20_29',\n  DEAD_30_39: 'obitos_30_39',\n  DEAD_40_49: 'obitos_40_49',\n  DEAD_50_59: 'obitos_50_59',\n  DEAD_60_69: 'obitos_60_69',\n  DEAD_70_79: 'obitos_70_79',\n  DEAD_80_PLUS: 'obitos_80_plus',\n};\n\nexport const KEY = {\n  // data.csv\n  CONFIRMED_PT: 'confirmados',\n  CONFIRMED_NORTH: 'confirmados_arsnorte',\n  CONFIRMED_CENTER: 'confirmados_arscentro',\n  CONFIRMED_LISBOA_TEJO: 'confirmados_arslvt',\n  CONFIRMED_ALENTEJO: 'confirmados_arsalentejo',\n  CONFIRMED_ALGARVE: 'confirmados_arsalgarve',\n  NEWCASES_PT: 'confirmados_novos',\n  ACTIVE_PT: 'ativos',\n  HOSPITALIZED: 'internados',\n  HOSPITALIZED_NURSERY: 'internados_enfermaria',\n  HOSPITALIZED_ICU: 'internados_uci',\n  DEAD_PT: 'obitos',\n  ...CONFIRMED_KEYS,\n  ...DEAD_KEYS,\n\n  // data.csv extra\n  ...CONFIRMED_EXTRA_KEYS,\n  ...DEAD_EXTRA_KEYS,\n\n  // data_concelhos_new.csv\n  TOWN_INCIDENCE_14: 'incidencia',\n  TOWN_CONFIRMED_14: 'confirmados_14',\n}\n\nexport default class EntriesAggregator<X, E extends Entry<X>> {\n  _name: string;\n  constructor(name: string) {\n    this._name = name;\n  }\n  getAll(key: string): E[] {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getAll!`);\n    return [];\n  }\n  getLast(key: string): any {\n    console.warn(`The EntriesAggregator '${this._name}' was not properly instantiated and is trying to call getLastEntry!`);\n    return null;\n  }\n}\n\nclass EntriesAggregatorImpl<X, E extends Entry<X>> extends EntriesAggregator<X, E> {\n  _aggregationMap: {[key: string]: E[]};\n\n  constructor(builder: EntriesAggregatorBuilder<X, E>) {\n    super(builder.name);\n    this._aggregationMap = builder._aggregator;\n  }\n\n  getAll(key: string): E[] {\n    return this._aggregationMap[key] || [];\n  }\n\n  getLast(key: string): E {\n    const entries = this._aggregationMap[key];\n    return entries[entries.length - 1];\n  }\n}\n\nexport class EntriesAggregatorBuilder<X, E extends Entry<X>> {\n  _name: string;\n  _aggregator: {[key: string]: E[]};\n\n  constructor(name: string) {\n    this._name = name;\n    this._aggregator = {};\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  addEntry(key: string, entry: E) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, entry];\n    return this;\n  }\n\n  addEntries(key: string, entries: E[]) {\n    const current = this._aggregator[key] || [];\n    this._aggregator[key] = [...current, ...entries];\n    return this;\n  }\n\n  build(): EntriesAggregatorImpl<X, E> {\n    return new EntriesAggregatorImpl(this);\n  }\n}\n\nexport class PtDataEntriesAggregatorBuilder extends EntriesAggregatorBuilder<string, DateEntry> {\n  addByAgeGroup(extraKeys: Object) {\n    Object.entries(extraKeys).forEach(([, v]) => {\n      const entriesM: DateEntry[] = this._aggregator[`${v}_m`];\n      const entriesF: DateEntry[] = this._aggregator[`${v}_f`];\n      this.addEntries(v, mergeEntryValuesBySum(entriesM, entriesF) as DateEntry[]);\n    });\n  }\n\n  preProcess() {\n    this.addByAgeGroup(DEAD_EXTRA_KEYS);\n    this.addByAgeGroup(CONFIRMED_EXTRA_KEYS);\n  }\n\n  build(): EntriesAggregatorImpl<string, DateEntry> {\n    this.preProcess();\n    return new EntriesAggregatorImpl(this);\n  }\n}","import Entry from \"./Entry\";\n\nfunction strToDate(dateStr: string): Date {\n  const parts = dateStr.split('-');\n  return new Date(Number(parts[2]), Number(parts[1])-1, Number(parts[0]));\n}\n\nexport function dateToStr(date: Date): string {\n  return `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}`;\n}\n\nexport default class DateEntry extends Entry<string> {\n  _date: Date;\n\n  constructor(date: string, count: string|number) {\n    super(date, typeof count === 'number' ? count : parseInt(count));\n    if(isNaN(this._y))\n      this._y = 0;\n\n    this._date = strToDate(date);\n  }\n\n  get dateStr(): string {\n    return this._x;\n  }\n\n  get date(): Date {\n    return this._date;\n  }\n\n  get count(): number {\n    return this._y;\n  }\n\n  buildNewWith(x: string, y: number): DateEntry {\n    return new DateEntry(x, y);\n  }\n}","\nexport default class Entry<X> {\n  protected _x: X;\n  protected _y: number;\n\n  constructor(x: X, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  \n  public get x() : X {\n    return this._x;\n  }\n  \n  public get y() : number {\n    return this._y;\n  }\n\n  buildNewWith(x: X, y: number): Entry<X> {\n    throw new Error('Method buildNewWith() is not implemented!');\n  }\n}","import { Readable } from 'stream';\nimport Csv from 'csv-parser';\nimport DateEntry from '../model/DateEntry';\nimport { EntriesAggregatorBuilder, PtDataEntriesAggregatorBuilder, KEY } from '../model/EntriesAggregator';\n\nfunction _getDataFromSource(sourceFile: string): Promise<Response> {\n  const url = 'https://raw.githubusercontent.com/dssg-pt/covid19pt-data/master/' + sourceFile;\n  const headers: Headers = new Headers({\n    //'Content-Type': 'application/x-www-form-urlencoded',\n    //'Origin': 'https://github.com',\n    //'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n    Accept: 'application/vnd.github.v3+json',\n    // 'Access-Control-Allow-Origin': '*',\n  });\n  console.log('[_getDataFromSource] Fetching ' + sourceFile);\n  return fetch(url, { method: 'GET', headers });\n}\n\nexport function getTownData(town: string, callback: Function) {\n  const filename = 'data_concelhos_new.csv';\n  _getDataFromSource(filename)\n    .then((response: Response) => {\n      if (response && response.status === 200)\n        return response.text();\n    })\n    .then(responseData => {\n      const builder = new EntriesAggregatorBuilder(filename);\n      const stream = new Readable();\n      stream.push(responseData);\n      stream.push(null);\n      stream\n        .pipe(Csv())\n        .on('data', data =>\n          data.concelho === town\n          && Object.values(KEY)\n          .forEach(key => data[key] && builder.addEntry(key, new DateEntry(data.data, data[key])))\n        )\n        .on('end', () => callback(builder.build()));\n    })\n    .catch(err => console.error(err));\n}\n\nexport function getPortugalData(callback: Function) {\n  const filename = 'data.csv';\n  _getDataFromSource(filename)\n    .then((response: Response) => {\n      if (response && response.status === 200)\n        return response.text();\n    })\n    .then(responseData => {\n      const builder = new PtDataEntriesAggregatorBuilder(filename);\n      const stream = new Readable();\n      stream.push(responseData);\n      stream.push(null);\n      stream\n        .pipe(Csv())\n        .on('data', data => {\n          Object.values(KEY)\n          .forEach(key => data[key] && builder.addEntry(key, new DateEntry(data.data, data[key])))\n        })\n        .on('end', () => callback(builder.build()));\n    })\n    .catch(err => console.error(err));\n}\n","import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nconst TextCard = ({ children }) => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        { children }\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default TextCard;\n","import { Store } from \"pullstate\";\nimport EntriesAggregator from \"../model/EntriesAggregator\";\n\nconst EntriesStore = new Store({\n  portugalEntries: new EntriesAggregator('DUMMY'),\n  trofaEntries: new EntriesAggregator('DUMMY'),\n  dateRange: 60,\n});\n\nexport default EntriesStore;\n","import { Store } from \"pullstate\";\n\nconst GeneralStore = new Store({\n  styles: {},\n  tab: 0,\n});\n\nexport default GeneralStore;\n","import React, { useState } from 'react';\nimport {\n  AppBar, FormControl, InputLabel, Select, MenuItem, Tab, Tabs, Toolbar, Button,\n  Dialog, DialogTitle, DialogActions, DialogContent, TextField,\n} from '@material-ui/core';\nimport EntriesStore from '../../store/EntriesStore';\nimport GeneralStore from '../../store/GeneralStore';\n\nconst MyHeader = () => {\n  const [isTimeDialogOpen, setTimeDialogOpen] = useState(false);\n  const [customTimeValue, setCustomTimeValue] = useState(0);\n  const [customTimeValueTmp, setCustomTimeValueTmp] = useState(0);\n  const styles = GeneralStore.useState(s => s.styles);\n\n  const validateTimeValue = n => {\n    const parsedTimeValue = parseInt(n);\n    return !isNaN(n) && Number.isInteger(parsedTimeValue) & parsedTimeValue > 0;\n  };\n\n  const onTabChange = (_e, v) => GeneralStore.update(s => {s.tab = v});\n\n  const closeTimeDialog = (newValue = undefined) => {\n    if(validateTimeValue(newValue)) {\n      setCustomTimeValue(newValue);\n      EntriesStore.update(s => {s.dateRange = parseInt(newValue)});\n    } else {\n      setCustomTimeValue();\n    }\n    setTimeDialogOpen(false);\n  };\n\n  const onTimeChange = e => {\n    const value = e.target.value;\n    const innerText = e.nativeEvent.target.innerText;\n    if(innerText === 'Outro')\n      setTimeDialogOpen(true);\n    else  {\n      EntriesStore.update(s => {s.dateRange = value});\n      setCustomTimeValue();\n    }\n      \n  };\n\n  const isTimeValueValid = validateTimeValue(customTimeValueTmp);\n\n  return (\n    <div>\n      <AppBar position=\"sticky\" className={styles.appBar}>\n        <Toolbar>\n        <FormControl className={styles.formControl}>\n          <InputLabel id=\"time-selector\">Tempo</InputLabel>\n          <Select\n            labelId=\"time-selector\"\n            id=\"time-select\"\n            value={EntriesStore.useState(s => s.dateRange)}\n            onChange={onTimeChange}\n          >\n            <MenuItem value={30}>30 dias</MenuItem>\n            <MenuItem value={60}>60 dias</MenuItem>\n            <MenuItem value={90}>90 dias</MenuItem>\n            <MenuItem value={999999}>Desde sempre</MenuItem>\n            <MenuItem value={customTimeValue}>Outro</MenuItem>\n          </Select>\n        </FormControl>\n        <Tabs\n            value={GeneralStore.useState(s => s.tab)}\n            onChange={onTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"my tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"Gráficos Gerais\" />\n            <Tab label=\"Gráficos Detalhados\" />\n            <Tab label=\"Infos\" />\n          </Tabs>\n          </Toolbar>\n      </AppBar>\n      <Dialog open={isTimeDialogOpen} onClose={closeTimeDialog} aria-labelledby=\"time-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Define um valor de tempo</DialogTitle>\n        <DialogContent>\n        <TextField\n            error={!isTimeValueValid}\n            autoFocus\n            margin=\"dense\"\n            id=\"time-value\"\n            label=\"Tempo (número inteiro)\"\n            type=\"numeric\"\n            fullWidth\n            onChange={e => setCustomTimeValueTmp(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => closeTimeDialog(customTimeValue)} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={() => closeTimeDialog(customTimeValueTmp)} color=\"primary\" disabled={!isTimeValueValid}>\n            Definir\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default MyHeader;\n","import React from 'react';\nimport { Typography, Card, CardContent } from '@material-ui/core';\n\n\nconst MyFooter = () => (\n  <Card>\n    <CardContent>\n      <Typography variant=\"body2\" component=\"p\">\n        Os dados aqui apresentados são extraídos do repositório <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a>.\n      <br />\n      O código para este dashboard pode ser consultado <a href=\"https://github.com/DiogoDuque/covid19TrofaGraph\">aqui</a>.\n      <br />\n        {/*The data hereby presented is extracted from the <a href=\"https://github.com/dssg-pt/covid19pt-data\">dssg-pt/covid19pt-data</a> repository.*/}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default MyFooter;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Entry from \"../model/Entry\";\n\nfunction getAdaptativePointRadius<X>(entries: Entry<X>[]): number {\n  const width = window.screen.availWidth;\n  const count = entries.length;\n  const densityRatio = count/width;\n  const densityValue = densityRatio*12;\n  const retVal = Math.max(4-densityValue, 1);\n  return retVal;\n}\n\n/** CHART ARGUMENTS */\n\nexport const getChartData = <X extends unknown>(entries: Entry<X>[], label: string, chosenTheme: object) => ({\n  datasets: [{\n    label,\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entries),\n    data: entries.map(entry => entry.y),\n    ...chosenTheme,\n  }],\n  labels: entries.map(entry => entry.x),\n});\n\nexport const getMultipleChartData = <X extends unknown>(entriesArray: Entry<X>[][], labels: string[], chosenThemes: object[]) => ({\n  datasets: Array.from(Array(entriesArray.length).keys()).map(i => ({\n    label: labels[i],\n    categoryPercentage: 1.0,\n    barPercentage: 0.95,\n    lineTension: 0.1,\n    borderWidth: 2,\n    pointBackgroundColor: '#fff',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointRadius: getAdaptativePointRadius(entriesArray[i]),\n    data: entriesArray[i].map(entry => entry.y),\n    ...chosenThemes[i],\n  })),\n  labels: entriesArray[0].map(entry => entry.x),\n});\n\nexport const getChartOptions = (beginAtZero=false, suggestedMin=null, suggestedMax=null) => ({\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      ticks: {\n        beginAtZero,\n        suggestedMin,\n        suggestedMax,\n      }\n    }]\n  },\n});\n\n/** HOF WRAPPERS */\nlet key=0;\nconst cardWrapper = (element: JSX.Element): JSX.Element => (\n  <Grid key={key++} item xs={6} md={3}>\n    { element }\n  </Grid>\n);\n\nexport const cardGroupWrapper = (...components: JSX.Element[]): JSX.Element => (\n  <Grid container spacing={1} direction=\"row\" alignItems=\"center\" justify=\"center\">\n    { components.map(component => cardWrapper(component)) }\n  </Grid>\n);\n\nconst chartWrapper = (chartElement: JSX.Element, styles: any): JSX.Element => (\n  <Grid item xs={12} key={key++}>\n    <div className={styles.chartContainer}>\n      {chartElement}\n    </div>\n  </Grid>\n);\n\nexport const chartGroupWrapper = (title: String, styles: any, ...components: JSX.Element[]) => (\n  <div>\n    <Typography variant=\"h3\" style={{ textAlign: 'center' }} gutterBottom>\n      {title}\n    </Typography>\n    <Grid container spacing={3}>\n      {components.map(component => chartWrapper(component, styles))}\n    </Grid>\n  </div>\n);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Typography, Card, CardContent } from '@material-ui/core';\nimport DateEntry from \"../../model/DateEntry\";\n\nconst InfoCard = ({title, entry}) => {\n\n  return (\n    <Card elevation={4}>\n      <CardContent>\n        <Typography style={{ fontSize: 15, fontWeight: 'bold' }} color=\"textSecondary\" gutterBottom>\n            {title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {entry.count}\n        </Typography>\n        <Typography style={{ fontSize: 11 }} color=\"textSecondary\">\n          {`Última atualização: ${entry.dateStr}`}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  entry: PropTypes.instanceOf(DateEntry).isRequired,\n};\n\nexport default InfoCard;","import React from 'react';\nimport { cardGroupWrapper } from '../../utils/chartUtils';\nimport { KEY } from '../../model/EntriesAggregator';\nimport InfoCard from '../card/InfoCard';\nimport EntriesStore from \"../../store/EntriesStore\";\n\nconst SummaryCards = () => {\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n\n  return cardGroupWrapper(\n    <InfoCard title=\"Casos ativos em Portugal\" entry={ptEntries.getLast(KEY.ACTIVE_PT)} />,\n    <InfoCard title=\"Casos novos em Portugal\" entry={ptEntries.getLast(KEY.NEWCASES_PT)} />,\n    <InfoCard title=\"Incidência na Trofa\" entry={trofaEntries.getLast(KEY.TOWN_INCIDENCE_14)} />,\n    <InfoCard title=\"Casos novos (14d) na Trofa\" entry={trofaEntries.getLast(KEY.TOWN_CONFIRMED_14)} />,\n  );\n}\n\nexport default SummaryCards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport DateEntry from '../../model/DateEntry';\nimport { getChartOptions, getChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst DefaultLineChart = ({ data, dateRange, label, theme, zeroBased }) => {\n  const lastNEntries = getEntriesSince(dateRange, data);\n  const min = Math.min(...lastNEntries.map(e=>e.count));\n  const max = Math.max(...lastNEntries.map(e=>e.count));\n  const margin = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + margin);\n\n  let suggestedMin = Math.round(min - margin);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  \n  return (\n    <Line\n      data={getChartData(lastNEntries, label, theme)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nDefaultLineChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.instanceOf(DateEntry)).isRequired,\n  dateRange: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  zeroBased: PropTypes.bool,\n};\n\nDefaultLineChart.defaultProps = {\n  zeroBased: true,\n};\n\nexport default DefaultLineChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport DateEntry from '../../model/DateEntry';\nimport { getChartOptions, getMultipleChartData } from '../../utils/chartUtils';\nimport { getEntriesSince } from '../../utils/EntriesOps';\n\nconst MultiLineChart = ({ dataArray, dateRange, labels, themes, zeroBased }) => {\n  const lastNEntriesArray = dataArray.map(d=>getEntriesSince(dateRange, d));\n  const lastEntriesFlat = lastNEntriesArray.flatMap(eArr=>eArr.map(e=>e.count));\n  const min = Math.min(...lastEntriesFlat);\n  const max = Math.max(...lastEntriesFlat);\n  const offset = Math.max((max - min)/20, zeroBased ? 4 : 2);\n\n  const suggestedMax = Math.round(max + offset);\n\n  let suggestedMin = Math.round(min - offset);\n  if(zeroBased) suggestedMin = Math.max(suggestedMin, 0);\n\n  if(dataArray.length !== labels.length || labels.length !== themes.length) {\n    console.error('Chart arguments cardinality did not match!');\n    return <Line options={getChartOptions(false, suggestedMin, suggestedMax)}/>\n  }\n  return (\n    <Line\n      data={getMultipleChartData(lastNEntriesArray, labels, themes)}\n      options={getChartOptions(zeroBased, suggestedMin, suggestedMax)}\n    />\n  );\n}\n\nMultiLineChart.propTypes = {\n  dataArray: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.instanceOf(DateEntry))).isRequired,\n  dateRange: PropTypes.number.isRequired,\n  labels: PropTypes.arrayOf(PropTypes.string.isRequired),\n  themes: PropTypes.arrayOf(PropTypes.object.isRequired),\n  zeroBased: PropTypes.bool,\n};\n\nMultiLineChart.defaultProps = {\n  zeroBased: true,\n  dateRange: 0,\n};\n\nexport default MultiLineChart;\n","function getThemeFromRGB(r,g,b, hasBackground=true, otherOptions={}) {\n  const unified = `${r},${g},${b}`;\n  return {\n    backgroundColor: hasBackground ? `rgba(${unified},0.4)` : 'rgba(0,0,0,0)',\n    borderColor: `rgba(${unified},1)`,\n    pointBorderColor: `rgba(${unified},1)`,\n    pointHoverBackgroundColor: `rgba(${unified},1)`,\n    ...otherOptions,\n  }\n}\n\n// CYAN\nexport const themeCyan = getThemeFromRGB(75, 192, 192);\nexport const themeCyanNoBG = getThemeFromRGB(75, 192, 192, false);\n\n\n// MAGENTA\nexport const themeMagenta = getThemeFromRGB(192, 75, 192);\nexport const themeMagentaNoBG = getThemeFromRGB(192, 75, 192, false);\nexport const themeMagentaLight = getThemeFromRGB(217, 128, 217);\nexport const themeMagentaLightNoBG = getThemeFromRGB(217, 128, 217, false);\nexport const themeMagentaDark = getThemeFromRGB(140, 83, 140);\nexport const themeMagentaDarkNoBG = getThemeFromRGB(140, 83, 140, false);\n\n\n// YELLOW\nexport const themeYellow = getThemeFromRGB(192, 192, 75);\nexport const themeYellowNoBG = getThemeFromRGB(192, 192, 75, false);\nexport const themeYellowLight = getThemeFromRGB(217, 217, 128);\nexport const themeYellowLightNoBG = getThemeFromRGB(217, 217, 128, false);\nexport const themeYellowDark = getThemeFromRGB(140, 140, 83);\nexport const themeYellowDarkNoBG = getThemeFromRGB(140, 140, 83, false);\n\n\n// BLUE\nexport const themeBlue = getThemeFromRGB(0, 80, 255);\nexport const themeBlueNoBG = getThemeFromRGB(0, 80, 255, false);\n\n\n// GREEN\nexport const themeGreen = getThemeFromRGB(0, 255, 80);\nexport const themeGreenNoBG = getThemeFromRGB(0, 255, 80, false);\n\n\n// RED\nexport const themeRed = getThemeFromRGB(255, 80, 30);\nexport const themeRedNoBG = getThemeFromRGB(255, 80, 30, false);\n\n// OTHERS\nexport const themeGreyTransparent = getThemeFromRGB(200, 200, 200, false, {pointRadius:0, pointHitRadius:0, borderDash:[8]});\nexport const themeDark = getThemeFromRGB(20, 20, 20);\n\nexport const severityTheme1 = getThemeFromRGB(255, 189, 0, false);\nexport const severityTheme2 = getThemeFromRGB(255, 84, 0, false);\nexport const severityTheme3 = getThemeFromRGB(158, 0, 89, false);\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport DefaultLineChart from \"../chart/DefaultLineChart\";\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeMagenta, themeMagentaDark, themeMagentaLight } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst GeneralCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  return chartGroupWrapper('Casos ativos', styles,\n    <DefaultLineChart\n      data={ptEntries.getAll(KEY.ACTIVE_PT)}\n      dateRange={dateRange}\n      label=\"Casos ativos em Portugal\"\n      theme={themeMagenta}\n      zeroBased={true}\n    />,\n    <MultiLineChart\n      dataArray={[ptEntries.getAll(KEY.HOSPITALIZED_NURSERY), ptEntries.getAll(KEY.HOSPITALIZED_ICU)]}\n      dateRange={dateRange}\n      labels={[\"Internados em Enfermaria em Portugal\", \"Internados em UCI em Portugal\"]}\n      themes={[themeMagentaLight, themeMagentaDark]}\n      zeroBased={true}\n    />\n  );\n}\n\nexport default GeneralCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { smoothEntryValues, derivateEntryValues } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeRed, themeDark, themeGreyTransparent } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst PortugalCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const deathEntries = derivateEntryValues(ptEntries.getAll(KEY.DEAD_PT));\n\n  return chartGroupWrapper('Evolução em Portugal', styles,\n\n    <MultiLineChart\n      dataArray={[ptEntries.getAll(KEY.NEWCASES_PT), smoothEntryValues(ptEntries.getAll(KEY.NEWCASES_PT))]}\n      dateRange={dateRange}\n      labels={['Casos novos em Portugal', '']}\n      themes={[themeRed, themeGreyTransparent]}\n    />,\n\n    <MultiLineChart\n    dataArray={[deathEntries, smoothEntryValues(deathEntries)]}\n    dateRange={dateRange}\n    labels={['Mortes em Portugal', '']}\n    themes={[themeDark, themeGreyTransparent]}\n  />,\n  );\n}\n\nexport default PortugalCharts;\n","// Data retrieved from:\n// https://www.pordata.pt/Municipios/Popula%c3%a7%c3%a3o+residente+segundo+os+Censos+total+e+por+dimens%c3%a3o+dos+lugares-24\nexport const POPULATION_PT =       10562178;\nexport const POPULATION_NORTH =     3689682;\nexport const POPULATION_CENTER =    2327755;\nexport const POPULATION_LISBOA =    2821876;\nexport const POPULATION_ALENTEJO =   757302;\nexport const POPULATION_ALGARVE =    451006;\n// https://www.pordata.pt/Municipios/Popula%c3%a7%c3%a3o+residente+segundo+os+Censos+total+e+por+grupo+et%c3%a1rio-19\nexport const POPULATION_0_9 =       482647 + 525087;\nexport const POPULATION_10_19 =     564595 + 565250;\nexport const POPULATION_20_29 =     582065 + 656076;\nexport const POPULATION_30_39 =     773567 + 824683;\nexport const POPULATION_40_49 =     73098 + 770294;\nexport const POPULATION_50_59 =     722360 + 677651;\nexport const POPULATION_60_69 =     634741 + 551701;\nexport const POPULATION_70_PLUS =   496438 + 961925;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { derivateEntryValues, convertDailyCountToDailyIncidency } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport {\n  themeYellowNoBG, themeCyanNoBG, themeMagentaNoBG, themeBlueNoBG, themeGreenNoBG\n} from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport {\n  POPULATION_NORTH, POPULATION_CENTER, POPULATION_LISBOA, POPULATION_ALENTEJO, POPULATION_ALGARVE\n} from '../../config/demographicValues';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst RegionCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const northEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_NORTH));\n  const centerEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_CENTER));\n  const lisbonEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_LISBOA_TEJO));\n  const alentejoEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALENTEJO));\n  const algarveEntries = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_ALGARVE));\n  const northDailyIncidencyEntries = convertDailyCountToDailyIncidency(northEntries, POPULATION_NORTH);\n  const centerDailyIncidencyEntries = convertDailyCountToDailyIncidency(centerEntries, POPULATION_CENTER);\n  const lisbonDailyIncidencyEntries = convertDailyCountToDailyIncidency(lisbonEntries, POPULATION_LISBOA);\n  const alentejoDailyIncidencyEntries = convertDailyCountToDailyIncidency(alentejoEntries, POPULATION_ALENTEJO);\n  const algarveDailyIncidencyEntries = convertDailyCountToDailyIncidency(algarveEntries, POPULATION_ALGARVE);\n\n  return chartGroupWrapper('Evolução regional', styles,\n\n    // #### ZONAS DE PORTUGAL ####\n    <MultiLineChart\n    dataArray={[northEntries, centerEntries, lisbonEntries, alentejoEntries, algarveEntries]}\n      dateRange={dateRange}\n      labels={[\n        'Casos novos no Norte', 'Casos novos no Centro', 'Casos novos em Lisboa/V.Tejo',\n        'Casos novos no Alentejo', 'Casos novos no Algarve']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n\n    // #### INCIDENCIA NAS ZONAS DE PORTUGAL ####\n    <MultiLineChart\n      dataArray={[\n        northDailyIncidencyEntries, centerDailyIncidencyEntries, lisbonDailyIncidencyEntries,\n        alentejoDailyIncidencyEntries, algarveDailyIncidencyEntries\n      ]}\n      dateRange={dateRange}\n      labels={[\n        'Incidência no Norte (a 1 dia p/ 100k hab.)', 'Incidência no Centro (a 1 dia p/ 100k hab.)',\n        'Incidência em Lisboa/V.Tejo (a 1 dia p/ 100k hab.)', 'Incidência no Alentejo (a 1 dia p/ 100k hab.)',\n        'Incidência no Algarve (a 1 dia p/ 100k hab.)']}\n      themes={[themeYellowNoBG, themeMagentaNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG]}\n    />,\n  );\n}\n\nexport default RegionCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { getEntriesLineGenerator } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport { themeYellow, severityTheme1, severityTheme2, severityTheme3 } from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst TrofaCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const trofaLineGenerator = getEntriesLineGenerator(trofaEntries.getAll(KEY.TOWN_INCIDENCE_14));\n  return chartGroupWrapper('Evolução na Trofa', styles,\n  \n    <MultiLineChart\n      dataArray={[\n        trofaEntries.getAll(KEY.TOWN_INCIDENCE_14), trofaLineGenerator(240),\n        trofaLineGenerator(480), trofaLineGenerator(960),\n      ]}\n      dateRange={dateRange}\n      labels={[\n        'Incidência na Trofa (a 14 dias p/ 100k hab.)', 'Risco elevado',\n        'Risco muito elevado', 'Risco extremamente elevado'\n      ]}\n      themes={[themeYellow, severityTheme1, severityTheme2, severityTheme3]}\n    />,\n  );\n}\n\nexport default TrofaCharts;\n","import React from \"react\";\nimport { chartGroupWrapper } from \"../../utils/chartUtils\";\nimport { derivateEntryValues, convertDailyCountToDailyIncidency, mergeEntryValuesBySum } from '../../utils/EntriesOps';\nimport MultiLineChart from \"../chart/MultiLineChart\";\nimport {\n  themeYellowNoBG, themeCyanNoBG, themeBlueNoBG, themeGreenNoBG, themeRedNoBG,\n  themeYellowDarkNoBG, themeMagentaDarkNoBG, themeMagentaLightNoBG\n} from \"../../config/themes\";\nimport { KEY } from \"../../model/EntriesAggregator\";\nimport {\n  POPULATION_0_9, POPULATION_10_19, POPULATION_20_29, POPULATION_30_39, POPULATION_40_49,\n  POPULATION_50_59, POPULATION_60_69, POPULATION_70_PLUS,\n} from '../../config/demographicValues';\nimport EntriesStore from \"../../store/EntriesStore\";\nimport GeneralStore from \"../../store/GeneralStore\";\n\nconst AgeCharts = () => {\n  const styles = GeneralStore.useState(s => s.styles);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const dateRange = EntriesStore.useState(s => s.dateRange);\n\n  const new0_9 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_0_9));\n  const new10_19 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_10_19));\n  const new20_29 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_20_29));\n  const new30_39 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_30_39));\n  const new40_49 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_40_49));\n  const new50_59 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_50_59));\n  const new60_69 = derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_60_69));\n  const new70_plus = mergeEntryValuesBySum(\n    derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_70_79)),\n    derivateEntryValues(ptEntries.getAll(KEY.CONFIRMED_80_PLUS)));\n\n  const newDailyIncidency0_9 = convertDailyCountToDailyIncidency(new0_9, POPULATION_0_9);\n  const newDailyIncidency10_19 = convertDailyCountToDailyIncidency(new10_19, POPULATION_10_19);\n  const newDailyIncidency20_29 = convertDailyCountToDailyIncidency(new20_29, POPULATION_20_29);\n  const newDailyIncidency30_39 = convertDailyCountToDailyIncidency(new30_39, POPULATION_30_39);\n  const newDailyIncidency40_49 = convertDailyCountToDailyIncidency(new40_49, POPULATION_40_49);\n  const newDailyIncidency50_59 = convertDailyCountToDailyIncidency(new50_59, POPULATION_50_59);\n  const newDailyIncidency60_69 = convertDailyCountToDailyIncidency(new60_69, POPULATION_60_69);\n  const newDailyIncidency70_plus = convertDailyCountToDailyIncidency(new70_plus, POPULATION_70_PLUS);\n\n  const dead0_9 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_0_9));\n  const dead10_19 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_10_19));\n  const dead20_29 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_20_29));\n  const dead30_39 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_30_39));\n  const dead40_49 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_40_49));\n  const dead50_59 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_50_59));\n  const dead60_69 = derivateEntryValues(ptEntries.getAll(KEY.DEAD_60_69));\n  const dead70_plus = mergeEntryValuesBySum(\n    derivateEntryValues(ptEntries.getAll(KEY.DEAD_70_79)),\n    derivateEntryValues(ptEntries.getAll(KEY.DEAD_80_PLUS)));\n  \n  const deadDailyIncidency0_9 = convertDailyCountToDailyIncidency(dead0_9, POPULATION_0_9);\n  const deadDailyIncidency10_19 = convertDailyCountToDailyIncidency(dead10_19, POPULATION_10_19);\n  const deadDailyIncidency20_29 = convertDailyCountToDailyIncidency(dead20_29, POPULATION_20_29);\n  const deadDailyIncidency30_39 = convertDailyCountToDailyIncidency(dead30_39, POPULATION_30_39);\n  const deadDailyIncidency40_49 = convertDailyCountToDailyIncidency(dead40_49, POPULATION_40_49);\n  const deadDailyIncidency50_59 = convertDailyCountToDailyIncidency(dead50_59, POPULATION_50_59);\n  const deadDailyIncidency60_69 = convertDailyCountToDailyIncidency(dead60_69, POPULATION_60_69);\n  const deadDailyIncidency70_plus = convertDailyCountToDailyIncidency(dead70_plus, POPULATION_70_PLUS);\n\n  const themes = [\n    themeMagentaLightNoBG, themeMagentaDarkNoBG, themeBlueNoBG, themeCyanNoBG,\n    themeGreenNoBG, themeYellowNoBG, themeYellowDarkNoBG, themeRedNoBG,\n  ];\n\n\n  return chartGroupWrapper('Evolução por idade', styles,\n\n  // #### CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n  dataArray={[new0_9, new10_19, new20_29, new30_39, new40_49, new50_59, new60_69, new70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Casos novos nos ${a} anos`)\n    }\n    themes={themes}\n  />,\n\n  // #### INCIDENCIA DE CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n    dataArray={[\n      newDailyIncidency0_9, newDailyIncidency10_19, newDailyIncidency20_29, newDailyIncidency30_39,\n      newDailyIncidency40_49, newDailyIncidency50_59, newDailyIncidency60_69, newDailyIncidency70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Incidência nos ${a} anos (p/ 100k pax na faixa)`)\n    }\n    themes={themes}\n  />,\n\n  // #### CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n  dataArray={[dead0_9, dead10_19, dead20_29, dead30_39, dead40_49, dead50_59, dead60_69, dead70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Mortes nos ${a} anos`)\n    }\n    themes={themes}\n  />,\n\n  // #### INCIDENCIA DE CASOS NOVOS POR IDADE ####\n  <MultiLineChart\n    dataArray={[\n      deadDailyIncidency0_9, deadDailyIncidency10_19, deadDailyIncidency20_29, deadDailyIncidency30_39,\n      deadDailyIncidency40_49, deadDailyIncidency50_59, deadDailyIncidency60_69, deadDailyIncidency70_plus]}\n    dateRange={dateRange}\n    labels={\n      ['0-9', '10-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70+']\n      .map(a => `Incidência de mortes nos ${a} anos (p/ 100k pax na faixa)`)\n    }\n    themes={themes}\n  />,\n  );\n}\n\nexport default AgeCharts;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport EntriesAggregator, { KEY } from './model/EntriesAggregator';\nimport { getTownData, getPortugalData } from './utils/fetchData';\nimport TextCard from './component/card/TextCard';\nimport MyHeader from './component/app/MyHeader';\nimport MyFooter from './component/app/MyFooter';\nimport SummaryCards from './component/app/SummaryCards';\nimport GeneralCharts from './component/app/GeneralCharts';\nimport NewCasesCharts from './component/app/PortugalCharts';\nimport RegionCharts from './component/app/RegionCharts';\nimport TrofaCharts from './component/app/TrofaCharts';\nimport EntriesStore from './store/EntriesStore';\nimport GeneralStore from './store/GeneralStore';\nimport DateEntry from './model/DateEntry';\nimport AgeCharts from './component/app/AgeCharts';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    'backgroundColor': '#f5f5f5',\n    flexGrow: 1,\n    'align-items': 'center',\n    'justify-content': 'center',\n    padding: 15,\n    paddingRight: 30,\n  },\n  chartContainer: {\n    position: 'relative',\n    margin: 'auto',\n    height: '50vh',\n    width: '90vw',\n  },\n  progress: {\n    float: 'none',\n    margin: '0 auto',\n  },\n  appBar: {\n    marginBottom: 20,\n    backgroundColor: '#e0e0e0',\n  },\n  formControl: {\n    margin: 10,\n    minWidth: 80,\n  },\n}));\n\nfunction getTabContent(tab: number) {\n  switch (tab) {\n    case 0:\n      return (\n        <div>\n          <GeneralCharts />\n          <br />\n          <TrofaCharts />\n          <br />\n          <NewCasesCharts />\n        </div>\n      );\n    case 1:\n      return (\n        <div>\n          <RegionCharts />\n          <br />\n          <AgeCharts />\n        </div>\n      );\n    case 2:\n      return <SummaryCards />;\n    default:\n      return (<p>Bug? ¯\\_(ツ)_/¯</p>);\n  }\n}\n\nconst App: () => JSX.Element = (): JSX.Element => {\n  // ========== DEFINITIONS ==========\n  const styles = useStyles();\n  GeneralStore.update(s => {s.styles = styles});\n\n  const [isFetching, setIsFetching]: [boolean, Function] = useState(true);\n  const [renderTime, setRenderTime]: [number, Function] = useState(0);\n  const ptEntries = EntriesStore.useState(s => s.portugalEntries);\n  const trofaEntries = EntriesStore.useState(s => s.trofaEntries);\n  let lastTownUpdate: string = \"\";\n  let lastPtUpdate: string = \"\";\n  const tab: number = GeneralStore.useState(s => s.tab);\n  let tabContent = getTabContent(tab);\n\n  const isPtDataReady = ptEntries.getAll(KEY.CONFIRMED_PT).length > 0;\n  const isTrofaDataReady = trofaEntries.getAll(KEY.TOWN_INCIDENCE_14).length > 0;\n\n\n  // ========== LOGIC ==========\n  useEffect(() => {\n    getTownData('TROFA', (e: EntriesAggregator<string, DateEntry>) => EntriesStore.update(s => {s.trofaEntries = e}));\n    getPortugalData((e: EntriesAggregator<string, DateEntry>) => EntriesStore.update(s => {s.portugalEntries = e}));\n  }, []);\n\n  if (!isFetching) {\n    lastTownUpdate = trofaEntries.getLast(KEY.TOWN_INCIDENCE_14).x;\n    lastPtUpdate = ptEntries.getLast(KEY.CONFIRMED_PT).x;\n    if(!renderTime) setRenderTime(performance.now());\n  }\n\n  if (isFetching && isTrofaDataReady && isPtDataReady)\n    setIsFetching(false);\n\n\n  // ========== RENDER ==========\n  return (\n    <div className={styles.root}>\n      { isFetching\n        ? <CircularProgress className={styles.progress} />\n        : <div>\n            <MyHeader />\n            <TextCard>\n              A última atualização destes dados ocorreu nas seguintes datas: {`Portugal/Norte => ${lastPtUpdate}, Trofa => ${lastTownUpdate}`}. Esta página carregou em {renderTime}ms.\n              </TextCard>\n\n            <br />\n            {tabContent}\n            <br />\n\n            <MyFooter />\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}